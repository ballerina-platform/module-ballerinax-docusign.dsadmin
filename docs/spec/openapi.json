{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DocuSign Admin API",
    "description" : "An API for an organization administrator to manage organizations, accounts and users",
    "termsOfService" : "https://www.docusign.com/company/terms-and-conditions/developers",
    "contact" : {
      "name" : "DocuSign Developer Center",
      "url" : "https://developers.docusign.com",
      "email" : "devcenter@docusign.com"
    },
    "version" : "v2.1"
  },
  "externalDocs" : {
    "description" : "See the DocuSign DocuSign Admin API Guide for more information.",
    "url" : "https://developers.docusign.com/docs/admin-api/reference"
  },
  "servers" : [ {
    "url" : "https://api.docusign.net/Management"
  } ],
  "tags" : [ {
    "name" : "IdentityProviders",
    "description" : "Methods to get a list of identity providers."
  }, {
    "name" : "ReservedDomains",
    "description" : "Methods to get a list of reserved domains."
  }, {
    "name" : "Users",
    "description" : "Methods to manage users in an account."
  }, {
    "name" : "eSignUserManagement",
    "description" : "Methods to manage eSignature users in an account."
  }, {
    "name" : "MultiProductUserManagement",
    "description" : "Methods to manage multi-product users in an account."
  }, {
    "name" : "UserExport",
    "description" : "Methods for exporting a user list."
  }, {
    "name" : "AccountSettingsExport",
    "description" : "Methods and objects to get account information."
  }, {
    "name" : "UserImport",
    "description" : "Methods to import users.\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)\n as a template.\n\nYou can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000."
  }, {
    "name" : "Organization",
    "description" : "Methods for working with organizations."
  }, {
    "name" : "AccountSettingsImport",
    "description" : "Methods and objects to update account settings."
  }, {
    "name" : "SingleAccountUserImport",
    "description" : "Methods to import users."
  }, {
    "name" : "DataDeletion",
    "description" : "Methods to delete user data. After a user is closed, an account or organization administrator can use these methods to delete the user's account data."
  }, {
    "name" : "AccountCloning",
    "description" : "Methods to clone accounts."
  } ],
  "paths" : {
    "/v2/organizations" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Returns a list of organizations that the authenticated user belongs to.",
        "description" : "Returns a list of organizations that the authenticated user belongs to.\n\nNote that the DocuSign Admin API only returns JSON, not XML.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `organization_read`.\n\nThis method requires user authentication. It will fail with an [application access token](/docs/admin-api/admin101/application-auth/).",
        "operationId" : "Organization_Organization_GetListV2",
        "parameters" : [ {
          "name" : "mode",
          "in" : "query",
          "description" : "Specifies how to select the organizations. Valid values:\n\n- `org_admin`: Returns organizations for which the authenticated user is an admin.\n- `account_membership`: Returns organizations that contain an account of which the authenticated user is a member\n\nDefault value: `org_admin`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "organization_read" ]
        } ],
        "x-ds-methodname" : "getOrganizations",
        "x-ds-method" : "getOrganizations",
        "x-ds-service" : "Accounts",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/data_redaction/accounts/{accountId}/user" : {
      "post" : {
        "tags" : [ "DataDeletion" ],
        "summary" : "Deletes membership data for a user on an account.",
        "description" : "Deletes the data for a single account membership for a specified user.\n\nTo call this endpoint: \n* You must be an administrator (or delegated administrator) of the specified account.\n* The user must have been closed for at least 24 hours.\n\n**Note:** After a user's data is deleted for every account to which they belong, their user-level data will automatically be deleted.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_data_redact`.\n",
        "operationId" : "DataRedaction_RedactIndividualMembershipData",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "The ID of the account from which to delete the user's data\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IndividualMembershipDataRedactionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IndividualUserDataRedactionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_data_redact" ]
        } ],
        "x-ds-methodname" : "redactIndividualMembershipData",
        "x-ds-method" : "redactIndividualMembershipData",
        "x-ds-service" : "Accounts",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "requestModel"
      }
    },
    "/v2/organizations/{organizationId}/accounts/{accountId}/permissions" : {
      "get" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Returns the list of permission profiles in an account.",
        "description" : "Returns the list of permission profiles in an account.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `permission_read`.\n\n",
        "operationId" : "Account_Accounts_GetPermissionProfilesV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "permission_read" ]
        } ],
        "x-ds-methodname" : "getPermissions",
        "x-ds-method" : "getPermissions",
        "x-ds-service" : "Accounts",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/accounts/{accountId}/groups" : {
      "get" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Returns the list of groups in an account.",
        "description" : "Returns the list of groups in an account.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `group_read`.\n",
        "operationId" : "Account_Accounts_GetGroupsV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Index of first item to include in the response. The default value is 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "Page size of the response. The default value is 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "Index of the last item to include in the response. Ignored if `take` parameter is specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberGroupsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "group_read" ]
        } ],
        "x-ds-methodname" : "getGroups",
        "x-ds-method" : "getGroups",
        "x-ds-service" : "Accounts",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/exports/user_list" : {
      "get" : {
        "tags" : [ "UserExport" ],
        "summary" : "Returns a list of pending and completed export requests.",
        "description" : "Returns a list of pending and completed export requests.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.\n",
        "operationId" : "OrganizationExport_OrganizationExport_Get",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserListExports",
        "x-ds-method" : "getUserListExports",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "UserExport" ],
        "summary" : "Creates a user list export request.",
        "description" : "Create a user list export request.\n\nThis method initiates a user list export request. You specify the type of export request as JSON in the body of method, like this:\n\n``` json\n{\n\t\"type\": \"organization_memberships_export\"\n}\n```\n\nThe export request type is one of three values:\n\n| Value                                      | Description                                                                                             |\n| :----------------------------------------- | :------------------------------------------------------------------------------------------------------ |\n| `organization_memberships_export`          | Every user in every account in the organization. Users in multiple accounts will appear more than once. |\n| `organization_domain_users_export`         | All users of the reserved domains.                                                                      |\n| `organization_external_memberships_export` | Users whose email address domain is *not* linked to the organization.                                   |\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationExport_OrganizationExport_Insert",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationExportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "createUserListExport",
        "x-ds-method" : "createUserListExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/exports/account_settings" : {
      "get" : {
        "tags" : [ "AccountSettingsExport" ],
        "summary" : "Returns a list of pending and completed account settings export request.",
        "description" : "Returns a list of pending and completed account settings export requests.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.",
        "operationId" : "OrganizationExport_OrganizationExport_GetAccountCompare",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "getAccountSettingsExports",
        "x-ds-method" : "getAccountSettingsExports",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "AccountSettingsExport" ],
        "summary" : "Creates a  new account settings export request.",
        "description" : "Creates a new account settings export request.\n\nTo learn more about exporting account settings,\nsee [Account Settings Export][guide-export]\nin the DocuSign Admin Guide.\n\nYou can export settings for up to 40 accounts at a time.\n\nSpecify the accounts whose settings you are requesting as JSON in the body of the request, like this:\n\n``` json\n{\n  \"accounts\":\t[\n  \t{ \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\"},\n  \t{ \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\"}\n\n  ]\n}\n```\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.\n\n### Related topics\n\n- [Account Settings import][guide-import] guide\n- [Account Settings Export][guide-export] guide\n\n\n[guide-import]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=nwl1583359167434.html\n[guide-export]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=kfj1583359164049.html",
        "operationId" : "OrganizationExport_OrganizationExport_AccountCompare",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationAccountsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "createAccountSettingsExport",
        "x-ds-method" : "createAccountSettingsExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/exports/user_list/{exportId}" : {
      "get" : {
        "tags" : [ "UserExport" ],
        "summary" : "Returns the results for single user list export request.",
        "description" : "Returns the results for single user list export request.\n\nGiven an export ID, this method returns the results of a single user list export request.\nTo get a list of all the export requests, use `getUserListExports`.\n\nNote that the `metadata_url` property of the response from `createUserListExport` is a read-to-use HTTP GET request to get the status.\n\nThe results are available through a URL that\nyou can access through the `results` property of the response.\nFor example, to get the URL of the first result you might use\n`results[0].url`\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationExport_OrganizationExport_GetByExportId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "The export ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserListExport",
        "x-ds-method" : "getUserListExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      },
      "delete" : {
        "tags" : [ "UserExport" ],
        "summary" : "Deletes a single user list export request.",
        "description" : "Deletes a single user list export request.\nUse this method to delete pending or completed user export requests.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.\n\n",
        "operationId" : "OrganizationExport_OrganizationExport_DeleteByExportId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "The export ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "deleteUserListExport",
        "x-ds-method" : "deleteUserListExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/exports/account_settings/{exportId}" : {
      "get" : {
        "tags" : [ "AccountSettingsExport" ],
        "summary" : "Returns the results for a single account settings export request.",
        "description" : "Returns the results for a single account settings export request.\n\nGiven an export ID, this method returns the results of an account settings export request.\nTo get a list of all the export requests, use `getAccountSettingsExports`.\n\nThe results are available through a URL that\nyou can access through the `results` property of the response.\nFor example, to get the URL of first result you might use\n`results[0].url`\n\nThe settings export is formatted like this:\n\n``` json\n{\n  \"accounts\": [\n    {\n      \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\",\n      \"name\": \"The Happy Company\",\n      . . .\n    },\n    {\n      \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\",\n      \"name\": \"LoanCo\",\n      . . .\n    }\n  ],\n  \"settings\": [\n    . . .\n    {\n      \"category\": \"Signing\",\n      \"name\": \"SignerCanSignOnMobile\",\n      \"account_values\": [\n        {\n          \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\",\n          \"value\": \"true\",\n          \"rights\": \"editable\"\n        },\n        {\n          \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\",\n          \"value\": \"true\",\n          \"rights\": \"editable\"\n        }\n      ]\n    },\n    . . .\n  ]\n}\n\n```\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.",
        "operationId" : "OrganizationExport_OrganizationExport_GetAccountSettingsExportByExportId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "The export ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationExportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "getAccountSettingsExport",
        "x-ds-method" : "getAccountSettingsExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      },
      "delete" : {
        "tags" : [ "AccountSettingsExport" ],
        "summary" : "Deletes a single account settings export request.",
        "description" : "Deletes a single account settings export request.\nAny data associated with the request is also deleted.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.\n",
        "operationId" : "OrganizationExport_OrganizationExport_DeleteByAccountSettingsExportId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "The export ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "deleteAccountSettingsExport",
        "x-ds-method" : "deleteAccountSettingsExport",
        "x-ds-service" : "BulkExports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/account_settings" : {
      "get" : {
        "tags" : [ "AccountSettingsImport" ],
        "summary" : "Returns the details and metadata for Bulk Account Settings Import requests in the organization.",
        "description" : "Returns the details and metadata for Bulk Account Settings Import requests in the organization.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.",
        "operationId" : "OrganizationImport_OrganizationImportAccountSettings_Get",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationAccountSettingsImportResponse"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "getBulkAccountSettingsImports",
        "x-ds-method" : "getBulkAccountSettingsImports",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "AccountSettingsImport" ],
        "summary" : "Creates a new account settings import request.",
        "description" : "Creates a new account settings import request.\n\nThe request for this method consists of\nthe contents of a CSV\nfile.\n\nYou can export your current settings as a CSV file with\n[AccountSettingsExport: createAccountSettingsExport](/docs/admin-api/reference/bulkoperations/accountsettingsexport/createaccountsettingsexport/)\nand use it as the basis\nof the changes you want to import.\n\n\nTo learn more about the format\nof a settings CSV file, see\n[Preparing a CSV for account settings import][guide-import]\nin the DocuSign Admin Guide.\n\nYou can import settings for up to 40 accounts at a time.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.\n\n### Related topics\n\n- [Account Settings import][guide-import] guide\n- [Account Settings Export][guide-export] guide\n\n[guide-import]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=nwl1583359167434.html\n[guide-export]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=kfj1583359164049.html\n",
        "operationId" : "OrganizationImport_OrganizationImportAccountSettings_Post",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportsAccountSettingsBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationAccountSettingsImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_write" ]
        } ],
        "x-ds-methodname" : "addBulkAccountSettingsImport",
        "x-ds-method" : "addBulkAccountSettingsImport",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/account_settings/{importId}" : {
      "get" : {
        "tags" : [ "AccountSettingsImport" ],
        "summary" : "Returns the details/metadata for a Bulk Account Settings Import request.",
        "description" : "Returns the details/metadata for a Bulk Account Settings Import request.\n\nGiven an import ID, this method returns the results of an account settings import request.\nTo get a list of all the import requests, use `getAccountSettingsImports`.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.\n",
        "operationId" : "OrganizationImport_OrganizationImportAccountSettings_GetById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "importId",
          "in" : "path",
          "description" : "The import ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationAccountSettingsImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_read" ]
        } ],
        "x-ds-methodname" : "getBulkAccountSettingsImport",
        "x-ds-method" : "getBulkAccountSettingsImport",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      },
      "delete" : {
        "tags" : [ "AccountSettingsImport" ],
        "summary" : "Deletes a Bulk Account Settings Import request.",
        "description" : "Deletes a single account settings import request.\nAny data associated with the request is also deleted.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.",
        "operationId" : "OrganizationImport_OrganizationImportAccountSettings_DeleteById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "importId",
          "in" : "path",
          "description" : "The import ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "account_write" ]
        } ],
        "x-ds-methodname" : "deleteBulkAccountSettingsImport",
        "x-ds-method" : "deleteBulkAccountSettingsImport",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/add" : {
      "post" : {
        "tags" : [ "UserImport" ],
        "summary" : "Creates a request to import new users into an account.",
        "description" : "Creates a request to import *new* users.\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user you want to add to an account. Only new users can be imported. Any changes to existing users will be ignored. To make changes to existing users, use [UserImport:updateBulkUserImports][imports].\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)\n as a template. The following table describes the columns.\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The API account ID for the account to which you want you add the user. You can find this ID in the Admin area for the account under **API and Keys.**                                                                                                                                                                                                                                                            |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n| UserTitle           |          | The user's job title.                                                                                                                                                                                                                                                                                                                                                                                               |\n| CompanyName         |          | The user's company name.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Group               |          | The user's assigned groups. The Group values must match existing Group names for the account. Additional Group columns can be added to the file to add users to more than one group. You do not need to add users to the Everyone group, since all new users are automatically added to that group.                                                                                                                 |\n| AddressLine1        |          | The user's address, first line.                                                                                                                                                                                                                                                                                                                                                                                     |\n| AddressLine2        |          | The user's address, second line.                                                                                                                                                                                                                                                                                                                                                                                    |\n| City                |          | The user's city name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| StateRegionProvince |          | The user's regional location.                                                                                                                                                                                                                                                                                                                                                                                       |\n| PostalCode          |          | The user's postal code.                                                                                                                                                                                                                                                                                                                                                                                             |\n| Phone               |          | The user's phone number.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Language            |          | The user's display language for their DocuSign account. Must be one of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional: <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French: <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese: <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish: <code>es</code></li></ul>                                                                                                                                                                                                                                                                                                                                                            |\n| LoginPolicy         |          | The user's login policy. Valid values include the following: <ul> <li>Column left blank = The user is created with no policy assigned.</li> <li>FedAuthRequired = The user must log in with an Identity Provider.</li> <li>FedAuthBypass = The user may log in with an Identity Provider or their DocuSign username and password.</li> </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=zah1583359147774.html). |\n| AutoActivate        |          | For domain users, new users can be activated automatically for domain accounts using SSO by setting the value to **true.** The user is activated automatically once the import is complete. Memberships activated in this way do not receive an activation email.                                                                                                                                                   |\n\n\nYou can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n\n\n[imports]: /docs/admin-api/reference/bulkoperations/userimport/updatebulkuserimports/\n",
        "operationId" : "OrganizationImport_OrganizationImportUsers_Insert",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkUsersAddBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addBulkUserImport",
        "x-ds-method" : "addBulkUserImport",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/add" : {
      "post" : {
        "tags" : [ "SingleAccountUserImport" ],
        "summary" : "Import request for adding a user to a single account within the organization.",
        "description" : "Import request for adding a user to a single account within the organization.\nThis method lets you upload user information without requiring an AccountId column.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "OrganizationImport_OrganizationImportSingleAccountUsers_Insert",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkUsersAddBody1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "createBulkImportSingleAccountAddUsersRequest",
        "x-ds-method" : "createBulkImportSingleAccountAddUsersRequest",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/update" : {
      "post" : {
        "tags" : [ "UserImport" ],
        "summary" : "Bulk updates information for existing users.",
        "description" : "Bulk updates information for existing users.\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user you want to add to an account. \n\n\n**Update limit:** You can update up to 2,000 users on an account and include up to 50 accounts per import. The maximum number of updated users per import is 8,000.\n\nThis method requires the following HTTP headers:\n\n| Header | Value |\n| :--- |  :--- |\n| Content-Type | `text/csv` |\n| Content-Disposition |  `filename=filename.csv` |\n\n\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)\n as a template. The following table describes the columns.\n\nNote that the columns for bulk adding users and bulk update users are slightly different.\nThe update CSV file requires an `APIUserName` column, and does not have an `AutoActivate` column.\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The 32-character API account ID of the user's account in your organization. You can find this value in the API and Keys section of the Admin area of the account.                                                                                                                                                                                                                                                             |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n| UserTitle           |          | The user's job title.                                                                                                                                                                                                                                                                                                                                                                                               |\n| CompanyName         |          | The user's company name.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Group               |          | The user's assigned groups. The Group values must match existing Group names for the account. Additional Group columns can be added to the file to add users to more than one group. You do not need to add users to the Everyone group, since all new users are automatically added to that group.                                                                                                                 |\n| AddressLine1        |          | The user's address, first line.                                                                                                                                                                                                                                                                                                                                                                                     |\n| AddressLine2        |          | The user's address, second line.                                                                                                                                                                                                                                                                                                                                                                                    |\n| City                |          | The user's city name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| StateRegionProvince |          | The user's regional location.                                                                                                                                                                                                                                                                                                                                                                                       |\n| PostalCode          |          | The user's postal code.                                                                                                                                                                                                                                                                                                                                                                                             |\n| Phone               |          | The user's phone number.                                                                                                                                                                                                                                                                                                                                                                                            |\n| Language            |          | The user's display language for their DocuSign account. Must be one of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional: <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French: <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese: <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish: <code>es</code></li></ul>                                                                                                                                                                                                                                                                                                                                                            |\n| LoginPolicy         |          | The user's login policy. Valid values include the following: <ul> <li>Column left blank = The user is created with no policy assigned.</li> <li>FedAuthRequired = The user must log in with an Identity Provider.</li> <li>FedAuthBypass = The user may log in with an Identity Provider or their DocuSign username and password.</li> </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=zah1583359147774.html). |\n| AutoActivate        |          | For domain users, new users can be activated automatically for domain accounts using SSO by setting the value to **true.** The user is activated automatically once the import is complete. Memberships activated in this way do not receive an activation email.                                                                                                                                                   |\n\n\n\n## Updating user email addresses\n\nChanging a user's email address should be done carefully. The user's email address is used to log in to DocuSign and receive documents to sign from others.\nOnce changed, existing documents that were sent or received:\n\n- Will still appear in the user's documents list.\n- Notifications about these documents will be sent to the new email address. If someone sends a new document to the old email address:\n- DocuSign will send a notification to the old address.\n- It will not appear in the documents list of the account.\n\nThis change of email address will be applied to all of the user's account memberships.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationImport_OrganizationImportUsers_Update",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkUsersUpdateBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "updateBulkUserImports",
        "x-ds-method" : "updateBulkUserImports",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/update" : {
      "post" : {
        "tags" : [ "SingleAccountUserImport" ],
        "summary" : "Import request for updating users for a single account\nwithin the organization.",
        "description" : "Import request for updating users for a single account\nwithin the organization.\n\nThis method lets you upload user information without requiring an `AccountId` column.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n\n",
        "operationId" : "OrganizationImport_OrganizationImportSingleAccountUsers_Update",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkUsersUpdateBody1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "createBulkImportSingleAccountUpdateUsersRequest",
        "x-ds-method" : "createBulkImportSingleAccountUpdateUsersRequest",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/close" : {
      "post" : {
        "tags" : [ "UserImport" ],
        "summary" : "Creates a request to close the accounts of existing users.",
        "description" : "Creates a request to close the accounts of existing users.\n\nGiven a CSV list of users, close their accounts.\n\nYour CSV import file is made up of a header row with the column headers and a row of user or account data for each user whose account you want to close.\n\nTo ensure your CSV is properly formatted, use the\n[Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)\n as a template. The following table describes the columns.\n\n\n\n\n| Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| AccountID           | yes      | The 32-character API account ID of the user's account in your organization. You can find this value in the API and Keys section of the Admin area of the account.                                                                                                                                                                                                                                                             |\n| AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |\n| FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |\n| LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |\n| UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |\n| PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationImport_OrganizationImportUsers_Close",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkUsersCloseBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "closeBulkUserImportRequest",
        "x-ds-method" : "closeBulkUserImportRequest",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/close_external" : {
      "post" : {
        "tags" : [ "UserImport" ],
        "summary" : "Closes external memberships.",
        "description" : "Closes external memberships.\n\nExternal memberships are users who have an email address at a verified domain but do not belong to the organization.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "OrganizationImport_OrganizationImportUsers_CloseExternal",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "closeBulkExternalUserImportRequest",
        "x-ds-method" : "closeBulkExternalUserImportRequest",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users" : {
      "get" : {
        "tags" : [ "UserImport" ],
        "summary" : "Gets a list of all of the user import requests.",
        "description" : "Gets a list of all of the user import requests.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationImport_OrganizationImportUsers_Get",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getBulkUserImportRequests",
        "x-ds-method" : "getBulkUserImportRequests",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/{importId}" : {
      "get" : {
        "tags" : [ "UserImport" ],
        "summary" : "Returns the details of a single user import request.",
        "description" : "Returns the details of a single user import request.\n\nUse this method to check the status of the request by looking at the `status` property of the response.\nOnce the status becomes `completed` (or fails), use this method to get the details.\n\nTo get a list of all of the user import requests, use `getBulkUserImportRequests`.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationImport_OrganizationImportUsers_GetById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "importId",
          "in" : "path",
          "description" : "The import ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationImportResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getBulkUserImportRequest",
        "x-ds-method" : "getBulkUserImportRequest",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      },
      "delete" : {
        "tags" : [ "UserImport" ],
        "summary" : "Deletes a specific user import request.",
        "description" : "Deletes a specific import request and its results.\n\nTo delete a user, see [closeBulkUserImportRequest](/docs/admin-api/reference/bulkoperations/userimport/closebulkuserimportrequest/).\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationImport_OrganizationImportUsers_DeleteById",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "importId",
          "in" : "path",
          "description" : "The import ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "deleteBulkUserImport",
        "x-ds-method" : "deleteBulkUserImport",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/imports/bulk_users/{importId}/results_csv" : {
      "get" : {
        "tags" : [ "UserImport" ],
        "summary" : "Given the ID of a user import request,\nreturn the CSV file that was imported.",
        "description" : "Returns the contents of the CSV file\nassociated with a user import request.\n\nThe results have an additional column,\n`ProcessingResults`,\nthat describes the results of importing that row.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.\n",
        "operationId" : "OrganizationImport_OrganizationImportUsers_GetCSVResults",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "importId",
          "in" : "path",
          "description" : "The import ID GUID for the request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getBulkUserImportCSV",
        "x-ds-method" : "getBulkUserImportCSV",
        "x-ds-service" : "BulkImports",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/identity_providers" : {
      "get" : {
        "tags" : [ "IdentityProviders" ],
        "summary" : "Returns the list of identity providers for an organization.",
        "description" : "Returns the list of identity providers for an organization.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `identity_provider_read`.",
        "operationId" : "Organization_GetIdentityProviders",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdentityProvidersResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "identity_provider_read" ]
        } ],
        "x-ds-methodname" : "getIdentityProviders",
        "x-ds-method" : "getIdentityProviders",
        "x-ds-service" : "IdentityProviders",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/data_redaction/organizations/{organizationId}/user" : {
      "post" : {
        "tags" : [ "DataDeletion" ],
        "summary" : "Deletes data for one or more of a user's account memberships.",
        "description" : "Deletes data for one or more of a user's account memberships.\n\nTo call this endpoint: \n* You must be an organization administrator (or delegated administrator) with permission to manage the specified accounts or the user's email domain.\n* The user must have been closed for at least 24 hours.\n\n**Note:** After a user's data is deleted for every account to which they belong, their user-level data will automatically be deleted.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_data_redact`.",
        "operationId" : "DataRedaction_RedactIndividualUserData",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IndividualUserDataRedactionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IndividualUserDataRedactionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_data_redact" ]
        } ],
        "x-ds-methodname" : "redactIndividualUserData",
        "x-ds-method" : "redactIndividualUserData",
        "x-ds-service" : "Organizations",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "requestModel"
      }
    },
    "/v2/organizations/{organizationId}/reserved_domains" : {
      "get" : {
        "tags" : [ "ReservedDomains" ],
        "summary" : "Returns the list of reserved domains for the organization.",
        "description" : "Returns the list of reserved domains for the organization.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `domain_read`.",
        "operationId" : "Organization_GetReservedDomains",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "domain_read" ]
        } ],
        "x-ds-methodname" : "getReservedDomains",
        "x-ds-method" : "getReservedDomains",
        "x-ds-service" : "ReservedDomains",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/users/profiles" : {
      "post" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Updates a user's information.",
        "description" : "Updates a user's information.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "User_Users_UpdateV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUsersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersUpdateResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "updateUser",
        "x-ds-method" : "updateUser",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/users/email_addresses" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Updates a user's email address.",
        "description" : "Updates a user's email address.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "User_Users_UpdateEmailAddressesV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUsersEmailRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersUpdateResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "updateEmailAddress",
        "x-ds-method" : "updateEmailAddress",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/users/{userId}/accounts" : {
      "delete" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Closes a user's memberships.",
        "description" : "Closes a user's memberships.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n\nThis method requires user authentication. It will fail with an [application access token](/docs/admin-api/admin101/application-auth/).",
        "operationId" : "User_Users_CloseMembershipsV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteMembershipsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteMembershipsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "closeMemberships",
        "x-ds-method" : "closeMemberships",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns information about the users in an organization.",
        "description" : "Returns information about the users in an organization.\n\nYou must include at least one of the following query parameters in the request:\n\n- `account_id`: The ID of an account associated with the organization.\n- `organization_reserved_domain_id`: The ID of one of the organization's reserved domains.\n- `email`: An email address associated with the users that you want to return.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationUser_OrganizationUsers_GetV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Index of first item to include in the response. The default value is 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "Page size of the response. The default value is 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "Index of the last item to include in the response. Ignored if `take` parameter is specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email address of the desired user. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email_user_name_like",
          "in" : "query",
          "description" : "Selects users by pattern matching on the user's email address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "emailUserNameLike"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "membership_status",
          "in" : "query",
          "description" : "The user's membership status. One of:\n\n- `activation_required`\n- `activation_sent`\n- `active`\n- `closed`\n- `disabled`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "membershipStatus"
        }, {
          "name" : "account_id",
          "in" : "query",
          "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "x-ballerina-name" : "accountId"
        }, {
          "name" : "organization_reserved_domain_id",
          "in" : "query",
          "description" : "Select users that are in the specified domain. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          },
          "x-ballerina-name" : "organizationReservedDomainId"
        }, {
          "name" : "last_modified_since",
          "in" : "query",
          "description" : "Select users whose data have been modified since the date specified. `account_id` or `organization_reserved_domain_id` must be specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "lastModifiedSince"
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationUsersResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUsers",
        "x-ds-method" : "getUsers",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Creates a new user.",
        "description" : "Creates a new user.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "OrganizationUser_Users_AddV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewUserResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "createUser",
        "x-ds-method" : "createUser",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/users/{userId}/memberships/{membershipId}" : {
      "post" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Activates user memberships.",
        "description" : "Activates user memberships.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "OrganizationUser_Users_ActivateMembershipV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "membershipId",
          "in" : "path",
          "description" : "The membership ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForceActivateMembershipRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "activateMembership",
        "x-ds-method" : "activateMembership",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2/organizations/{organizationId}/users/profile" : {
      "get" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Returns historical information about users with a specific email address.\n",
        "description" : "Returns historical information about users with a specific email address.\n**Note:** The `email` query parameter is _required_.\n\n\nTo get a list of users in an organization,\nuse [Users: getUsers](/docs/admin-api/reference/usermanagement/users/getusers/)\ninstead.\n\nFor example, the following request gets information about\naccounts that use `max@example.net` as an email address:\n\n\n```json\nGET /Management/v2/organizations/96e994fa-xxxx-xxxx-xxxx-c5fe9d1ccd10/users/profile?email=max@example.net\n\n{\n  \"users\": [\n    {\n      \"id\": \"6b67a1ee-xxxx-xxxx-xxxx-385763624163\",\n      \"site_id\": 1,\n      \"site_name\": \"Monadnock\",\n      \"user_name\": \"Max Example\",\n      \"first_name\": \"Max\",\n      \"last_name\": \"Example\",\n      \"user_status\": \"active\",\n      \"default_account_id\": \"f636f297-xxxx-xxxx-xxxx-8e7a14715950\",\n      \"default_account_name\": \"BizCo\",\n      \"is_organization_admin\": false,\n      \"created_on\": \"2019-04-01T22:11:56.457\",\n      \"memberships\": [\n        {\n          \"email\": \"max@example.net\",\n          \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\",\n          \"external_account_id\": \"17xxxxx1\",\n          \"account_name\": \"LoanCo\",\n          \"is_external_account\": false,\n          \"status\": \"active\",\n          \"permission_profile\": { },\n          \"created_on\": \"2019-04-01T22:11:56.457\",\n          \"groups\": [ ],\n          \"is_admin\": false\n        },\n        {\n          \"email\": \"max@example.net\",\n          \"account_id\": \"f636f297-xxxx-xxxx-xxxx-8e7a14715950\",\n          \"external_account_id\": \"25xxxxx0\",\n          \"account_name\": \"BizCo\",\n          \"is_external_account\": true,\n          \"status\": \"active\",\n          \"permission_profile\": { },\n          \"created_on\": \"2021-07-07T15:10:51.96\",\n          \"groups\": [ ],\n          \"is_admin\": false\n        },\n        {\n          \"email\": \"max@example.net\",\n          \"account_id\": \"6aed3a52-xxxx-xxxx-xxxx-e89988167cfd\",\n          \"external_account_id\": \"11xxxxx1\",\n          \"account_name\": \"SleepCo\",\n          \"is_external_account\": true,\n          \"status\": \"closed\",\n          \"permission_profile\": { },\n          \"created_on\": \"2021-07-11T12:40:44.26\",\n          \"groups\": [],\n          \"is_admin\": true,\n          \"closed_on\": \"2021-07-13T08:40:51.8\"\n        }\n      ],\n      \"identities\": [],\n      \"device_verification_enabled\": false\n    }\n  ]\n}\n```\n\nThe response includes up to the first 20 users modified in the last 10 days.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.\n\n\n\n\n",
        "operationId" : "OrganizationUser_OrganizationUsers_GetProfileV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "The email address associated with the users you want to retrieve.\n\n**Note:** This property is required",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDrilldownResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserProfiles",
        "x-ds-method" : "getUserProfiles",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true
      }
    },
    "/v2/organizations/{organizationId}/users/{userId}/identities" : {
      "delete" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Deletes user identities.",
        "description" : "Deletes user identities.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n",
        "operationId" : "OrganizationUser_DeleteIdentitiesV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteUserIdentityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "deleteIdentities",
        "x-ds-method" : "deleteIdentities",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "requestModel"
      }
    },
    "/v2/organizations/{organizationId}/accounts/{accountId}/users" : {
      "post" : {
        "tags" : [ "eSignUserManagement" ],
        "summary" : "Adds users to an account.",
        "description" : "Adds users to an account.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.\n\n",
        "operationId" : "OrganizationUser_OrganizationUsers_PostAccountUsersV2",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID Guid",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewAccountUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewUserResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addUsers",
        "x-ds-method" : "addUsers",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Returns a list of DSGroups.",
        "description" : "Returns a list of DSGroups.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "DocuSignGroupsv21_GetDSGroups_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start page of DSGroups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Page size of DSGroups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DSGroupListResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getDSGroups",
        "x-ds-method" : "getDSGroups",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Creates a new DSGroup.",
        "description" : "Creates a new DSGroup.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "DocuSignGroupsv21_AddDSGroup_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DSGroupAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DSGroupResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addDSGroup",
        "x-ds-method" : "addDSGroup",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "addRequest"
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Returns details about a single DSGroup.",
        "description" : "Returns details about a single DSGroup.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "DocuSignGroupsv21_GetDSGroup_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "dsGroupId",
          "in" : "path",
          "description" : "The DSGroup's ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DSGroupResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getDSGroup",
        "x-ds-method" : "getDSGroup",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true
      },
      "delete" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Deletes a DSGroup.",
        "description" : "Deletes a DSGroup.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "DocuSignGroupsv21_DeleteDSGroup_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "dsGroupId",
          "in" : "path",
          "description" : "The DSGroup's GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "deleteDSGroup",
        "x-ds-method" : "deleteDSGroup",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}/users" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Gets a list of users in a DSGroup.",
        "description" : "Gets a list of users in a DSGroup.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "DocuSignGroupsv21_GetDSGroupUsers_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "dsGroupId",
          "in" : "path",
          "description" : "The DSGroup's GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start page of DSGroups\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Page size of DSGroups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DSGroupAndUsersResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getDSGroupUsers",
        "x-ds-method" : "getDSGroupUsers",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Adds a list of users to a DSGroup.",
        "description" : "Adds a list of users to a DSGroup.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "DocuSignGroupsv21_AddDSGroupUsers_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "dsGroupId",
          "in" : "path",
          "description" : "The DSGroup's GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DSGroupUsersAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddDSGroupAndUsersResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addDSGroupUsers",
        "x-ds-method" : "addDSGroupUsers",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "dSGroupUsersAddRequest"
      },
      "delete" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Removes a list of users from a DSGroup.",
        "description" : "Removes a list of users from a DSGroup. In the request body, you can specify users by ID or email address. If both parameters are included, the email address parameter will be ignored.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "DocuSignGroupsv21_RemoveDSGroupUsers_V2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "dsGroupId",
          "in" : "path",
          "description" : "The DSGroup's GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DSGroupUsersRemoveRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveDSGroupUsersResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "removeDSGroupUsers",
        "x-ds-method" : "removeDSGroupUsers",
        "x-ds-service" : "DSGroups",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "dSGroupUsersRemoveRequest"
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/permission_profiles" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Gets products associated with the account and the available permission profiles.",
        "description" : "Gets products associated with the account and the available permission profiles.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationProductPermissionProfile_GetProductPermissionProfiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPermissionProfilesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getProductPermissionProfiles",
        "x-ds-method" : "getProductPermissionProfiles",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/users/{userId}/permission_profiles" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Retrieves a user's product permission profiles by user ID.",
        "description" : "Retrieves a list of a user's permission profiles for each account's product. The user is specified by the ID provided in the `userId` path parameter.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationProductPermissionProfile_GetUserProductPermissionProfiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPermissionProfilesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserProductPermissionProfiles",
        "x-ds-method" : "getUserProductPermissionProfiles",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Assigns permission profiles for a user by user ID.",
        "description" : "Sets permission profiles for one or more products for a given user. The user is specified by the `userId` path parameter.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationProductPermissionProfile_PostUserProductPermissionProfiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPermissionProfilesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProductPermissionProfilesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addUserProductPermissionProfiles",
        "x-ds-method" : "addUserProductPermissionProfiles",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "productPermissionProfilesRequest"
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/users" : {
      "post" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Creates and updates a multi-product user.",
        "description" : "Creates and updates a multi-product user.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationUser_OrganizationUsers_PostAccountUsersV2_1",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewMultiProductUserAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddUserResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addOrUpdateUser",
        "x-ds-method" : "addOrUpdateUser",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v2.1/organizations/{organizationId}/users/dsprofile" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Retrieves the DS profile for a user specified by email address.",
        "description" : "Gets information about a user specified by the `email` query parameter.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationUser_OrganizationUsers_GetDSProfiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "The email address of the user.\n\n**Note:** This property is required",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "When **true,** sorts the results in ascending order by account name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDrilldownResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserDSProfilesByEmail",
        "x-ds-method" : "getUserDSProfilesByEmail",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true
      }
    },
    "/v2.1/organizations/{organizationId}/users/{userId}/dsprofile" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Retrieves the DS profile for a user specified by ID.",
        "description" : "Gets information about a user specified by the `userId` query parameter.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationUser_OrganizationUsers_GetDSProfileByUserId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "When **true,** sorts the results in ascending order by account name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDrilldownResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_read" ]
        } ],
        "x-ds-methodname" : "getUserDSProfile",
        "x-ds-method" : "getUserDSProfile",
        "x-ds-service" : "Users",
        "x-ds-in-sdk" : true
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/users" : {
      "delete" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Revokes a user's access to one or more products.",
        "description" : "Revokes a specified user's access to one or more products.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationProductPermissionProfile_RemoveUserProducts",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProductProfileDeleteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveUserProductsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "removeUserProductPermission",
        "x-ds-method" : "removeUserProductPermission",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "userProductPermissionProfilesRequest"
      }
    },
    "/v2.1/organizations/{organizationId}/accounts/{accountId}/products/permission_profiles/users" : {
      "get" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Retrieves a user's product permission profiles by email address.",
        "description" : "Retrieves a list of a user's permission profiles for each account's product. The user is specified by the email address provided in the `email` query parameter.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.",
        "operationId" : "OrganizationProductPermissionProfile_GetUserProductPermissionProfilesByEmail",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "The email address of the user.\n\n**Note:** This property is required",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProductPermissionProfilesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "getUserProductPermissionProfilesByEmail",
        "x-ds-method" : "getUserProductPermissionProfilesByEmail",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true
      },
      "post" : {
        "tags" : [ "MultiProductUserManagement" ],
        "summary" : "Assigns permission profiles for a user by email address.",
        "description" : "Sets permission profiles for one or more products for a given user. The user is specified by the `email` property in the request body.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.",
        "operationId" : "OrganizationProductPermissionProfile_PostUserProductPermissionProfilesByEmail",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "The account ID GUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProductPermissionProfilesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProductPermissionProfilesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "user_write" ]
        } ],
        "x-ds-methodname" : "addUserProductPermissionProfilesByEmail",
        "x-ds-method" : "addUserProductPermissionProfilesByEmail",
        "x-ds-service" : "ProductPermissionProfiles",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "userProductPermissionProfilesRequest"
      }
    },
    "/v1/organizations/{organizationId}/assetGroups/accounts" : {
      "get" : {
        "tags" : [ "AccountCloning" ],
        "summary" : "Get asset group accounts for an organization.",
        "description" : "Returns a list of asset group accounts for an organization.\n\nAn asset group is a set of modules, products, plans, and charges purchased for your organization. An asset group account is an account that has been linked to an asset group.\n\nTo call this endpoint:\n* You must be an administrator for the specified organization.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `asset_group_account_read`.",
        "operationId" : "OrganizationProvisionAssetGroup_GetAssetGroupAccountsByOrg",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "compliant",
          "in" : "query",
          "description" : "When **true,** only compliant accounts are returned and account responses do not include the `compliant` field. The default value is **false.**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetGroupAccountsResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "asset_group_account_read" ]
        } ],
        "x-ds-methodname" : "getAssetGroupAccounts",
        "x-ds-method" : "getAssetGroupAccounts",
        "x-ds-service" : "ProvisionAssetGroup",
        "x-ds-in-sdk" : true
      }
    },
    "/v1/organizations/{organizationId}/assetGroups/accountClone" : {
      "post" : {
        "tags" : [ "AccountCloning" ],
        "summary" : "Clone an existing DocuSign account.",
        "description" : "Clones an existing DocuSign account. Cloning an account copies the plan items and eSignature settings. Users, templates, and permission profiles are _not_ copied into the target account. The new account will linked to the same organization.\n\nIn the request body, specify the source account you are cloning by its ID. You can get the IDs for your organization's asset group accounts using the [getAssetGroupAccounts](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccounts/) endpoint. \n\nYou also need to specify information about the new target account, including the name, location, and administrator. To set the location, provide either the `countryCode` or `region` properties. (If both are specified, the `region` value will be used.)\n\nThe request body looks like this:\n```\n{\n    \"sourceAccount\": {\n        \"id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\"\n    },\n    \"targetAccount\": {\n        \"name\": \"My Cloned Account\",\n        \"admin\": {\n            \"firstName\": \"Francis\",\n            \"lastName\": \"Beagle\",\n            \"email\": \"francis@example.com\"\n        },\n        \"region\": \"NA\"\n    }\n}\n```\n\nTo call this endpoint:\n* You must be an administrator for the specified organization.\n* The source account must be on the same plan as your contract.\n* The source account must be an asset group account. An asset group is a set of modules, products, plans, and charges purchased for your organization. An asset group account is an account that has been linked to an asset group.\n\n[Required scopes](/docs/admin-api/admin101/auth/): `asset_group_account_clone_write`.",
        "operationId" : "OrganizationProvisionAssetGroup_CloneAssetGroupAccount",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssetGroupAccountClone"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetGroupAccountClone"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "asset_group_account_clone_write" ]
        } ],
        "x-ds-methodname" : "cloneAssetGroupAccount",
        "x-ds-method" : "cloneAssetGroupAccount",
        "x-ds-service" : "ProvisionAssetGroup",
        "x-ds-in-sdk" : true,
        "x-codegen-request-body-name" : "request"
      }
    },
    "/v1/organizations/{organizationId}/assetGroups/accountClones" : {
      "get" : {
        "tags" : [ "AccountCloning" ],
        "summary" : "Gets all asset group account clones for an organization.",
        "description" : "Retrieves all the cloned accounts for an organization.\n\nTo call this endpoint:\n* You must be an administrator for the specified organization.\n\n[Required scopes](/docs/admin-api/admin101/auth/): `asset_group_account_clone_read`.",
        "operationId" : "OrganizationProvisionAssetGroup_GetAssetGroupAccountClonesByOrgId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "since_updated_date",
          "in" : "query",
          "description" : "Use this parameter to retrieve only account clones that were created on or after a specified date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "sinceUpdatedDate"
        }, {
          "name" : "include_details",
          "in" : "query",
          "description" : "When **true,** include additional details for the asset group account clones. The default value is **false.**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "includeDetails"
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetGroupAccountClones"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "asset_group_account_clone_read" ]
        } ],
        "x-ds-methodname" : "getAssetGroupAccountClonesByOrgId",
        "x-ds-method" : "getAssetGroupAccountClonesByOrgId",
        "x-ds-service" : "ProvisionAssetGroup",
        "x-ds-in-sdk" : true
      }
    },
    "/v1/organizations/{organizationId}/assetGroups/{assetGroupId}/accountClones/{assetGroupWorkId}" : {
      "get" : {
        "tags" : [ "AccountCloning" ],
        "summary" : "Gets information about a single cloned account.",
        "description" : "Gets information about a cloned account by the `assetGroupWorkId`.\n\nTo call this endpoint:\n* You must be an administrator for the specified organization.\n\n[Required scopes](/docs/admin-api/admin101/auth/): `asset_group_account_clone_read`.",
        "operationId" : "OrganizationProvisionAssetGroup_GetAssetGroupAccountClone",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "The organization's GUID\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "assetGroupId",
          "in" : "path",
          "description" : "The ID of the asset group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "assetGroupWorkId",
          "in" : "path",
          "description" : "The ID of the asset group account clone request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "include_details",
          "in" : "query",
          "description" : "When **true,** include additional details about the cloned account. The default value is **false.**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "includeDetails"
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response or an error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetGroupAccountClone"
                }
              }
            }
          }
        },
        "security" : [ {
          "accessCode" : [ "asset_group_account_clone_read" ]
        } ],
        "x-ds-methodname" : "getAssetGroupAccountClone",
        "x-ds-method" : "getAssetGroupAccountClone",
        "x-ds-service" : "ProvisionAssetGroup",
        "x-ds-in-sdk" : true
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountSettingsExport" : {
        "type" : "object",
        "description" : "Methods and objects to get account information",
        "x-ds-category" : "BulkOperations",
        "x-ms-summary" : "Methods and objects to get account information."
      },
      "DeleteMembershipsRequest" : {
        "required" : [ "accounts" ],
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "description" : "A list of accounts to close for a user",
            "items" : {
              "$ref" : "#/components/schemas/DeleteMembershipRequest"
            }
          }
        },
        "description" : "A list of accounts to close for a user",
        "x-ds-definition-name" : "DeleteMembershipsRequest",
        "x-ms-summary" : "A list of accounts to close for a user."
      },
      "AddUserResponse" : {
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "accounts" : {
            "type" : "array",
            "description" : "",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AddUserResponseAccountProperties"
            }
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`",
            "x-ballerina-name" : "federatedStatus"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AddUserResponse",
        "x-ms-summary" : ""
      },
      "DSGroupAddRequest" : {
        "required" : [ "group_name" ],
        "type" : "object",
        "properties" : {
          "group_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "groupName"
          },
          "description" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupAddRequest",
        "x-ms-summary" : ""
      },
      "SingleAccountUserImport" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : ""
          },
          "error_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "errorCount"
          },
          "user_level_warning_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseWarningRollup"
            },
            "x-ballerina-name" : "userLevelWarningRollups"
          },
          "imports_timed_out_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsTimedOutForAccounts"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "user_level_error_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseErrorRollup"
            },
            "x-ballerina-name" : "userLevelErrorRollups"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          },
          "updated_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "updatedUserCount"
          },
          "imports_timed_out_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsTimedOutForSites"
          },
          "created" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "imports_failed_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsFailedForAccounts"
          },
          "no_action_required_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "noActionRequiredUserCount"
          },
          "closed_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "closedUserCount"
          },
          "invalid_column_headers" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "invalidColumnHeaders"
          },
          "file_level_error_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseErrorRollup"
            },
            "x-ballerina-name" : "fileLevelErrorRollups"
          },
          "processed_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "processedUserCount"
          },
          "requestor" : {
            "$ref" : "#/components/schemas/OrganizationImportResponseRequestor"
          },
          "results_uri" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "resultsUri"
          },
          "imports_failed_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsFailedForSites"
          },
          "has_csv_results" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "hasCsvResults"
          },
          "user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "userCount"
          },
          "imports_not_found_or_not_available_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsNotFoundOrNotAvailableForAccounts"
          },
          "imports_not_found_or_not_available_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsNotFoundOrNotAvailableForSites"
          },
          "warning_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "warningCount"
          },
          "added_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "addedUserCount"
          },
          "status" : {
            "type" : "string",
            "description" : "Status"
          }
        },
        "description" : "Methods to import users",
        "x-ds-definition-name" : "OrganizationImportResponse",
        "x-ds-category" : "BulkOperations",
        "x-ds-order" : "100",
        "x-ms-summary" : "Methods to import users."
      },
      "UpdateUsersEmailRequest" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "description" : "A list of users whose email address to change",
            "items" : {
              "$ref" : "#/components/schemas/UpdateUserEmailRequest"
            }
          }
        },
        "description" : "A change email request",
        "x-ds-definition-name" : "UpdateUsersEmailRequest",
        "x-ms-summary" : "A change email request."
      },
      "Users" : {
        "type" : "object",
        "description" : "Methods to manage users in an account",
        "x-ds-category" : "UserManagement",
        "x-ms-summary" : "Methods to manage users in an account."
      },
      "NewUserResponseAccountProperties" : {
        "type" : "object",
        "properties" : {
          "company_name" : {
            "type" : "string",
            "description" : "The user's company name",
            "x-ballerina-name" : "companyName"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID of the account",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "groups" : {
            "type" : "array",
            "description" : "A list of groups that the user belongs to",
            "items" : {
              "$ref" : "#/components/schemas/MemberGroupResponse"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "permission_profile" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PermissionProfileResponse"
            } ],
            "x-ballerina-name" : "permissionProfile"
          },
          "job_title" : {
            "type" : "string",
            "description" : "The job title of the user",
            "x-ballerina-name" : "jobTitle"
          }
        },
        "description" : "Information about a newly created user",
        "x-ds-definition-name" : "NewUserResponseAccountProperties",
        "x-ms-summary" : "Information about a newly created user."
      },
      "UserProductProfileDeleteRequest" : {
        "required" : [ "product_ids" ],
        "type" : "object",
        "properties" : {
          "user_email" : {
            "type" : "string",
            "description" : "The user's email address",
            "x-ballerina-name" : "userEmail"
          },
          "product_ids" : {
            "type" : "array",
            "description" : "A list of IDs corresponding to the products for which the user's access will be revoked.\n\nFor example:\n\n`[\"230546a7-xxxx-xxxx-xxxx-af205d5494ad\", \"984800b7-xxxx-xxxx-xxxx-kt374a5922lk\"]`",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            },
            "x-ballerina-name" : "productIds"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "UserProductProfileDeleteRequest",
        "x-ms-summary" : ""
      },
      "IndividualUserDataRedactionRequest" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user whose data you want to delete",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "memberships" : {
            "type" : "array",
            "description" : "A list of accounts from which you want to delete the user's data. At least one account is required",
            "items" : {
              "$ref" : "#/components/schemas/MembershipDataRedactionRequest"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "IndividualUserDataRedactionRequest",
        "x-ms-summary" : ""
      },
      "ProductPermissionProfilesRequest" : {
        "required" : [ "product_permission_profiles" ],
        "type" : "object",
        "properties" : {
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their respective permissions",
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileRequest"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "ProductPermissionProfilesRequest",
        "x-ms-summary" : ""
      },
      "UpdateUsersRequest" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "description" : "A list of users whose information you want to change",
            "items" : {
              "$ref" : "#/components/schemas/UpdateUserRequest"
            }
          }
        },
        "description" : "A list of users whose information you want to change",
        "x-ds-definition-name" : "UpdateUsersRequest",
        "x-ms-summary" : "A list of users whose information you want to change."
      },
      "DeleteMembershipResponse" : {
        "type" : "object",
        "properties" : {
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of an account that could not be closed",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "Results of closing accounts",
        "x-ds-definition-name" : "DeleteMembershipResponse",
        "x-ms-summary" : "Results of closing accounts."
      },
      "AddDSGroupUsersResponse" : {
        "type" : "object",
        "properties" : {
          "TotalCount" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "totalCount"
          },
          "is_success" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "isSuccess"
          },
          "users" : {
            "type" : "array",
            "description" : "A list of users",
            "items" : {
              "$ref" : "#/components/schemas/DSGroupUserResponse"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AddDSGroupUsersResponse",
        "x-ms-summary" : ""
      },
      "AssetGroupAccountCloneTargetAccountAdmin" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "description" : "The first name of the target account administrator. This property is required in the request body when cloning an account"
          },
          "lastName" : {
            "type" : "string",
            "description" : "The last name of the target account administrator. This property is required in the request body when cloning an account"
          },
          "locale" : {
            "type" : "string",
            "description" : "The locale of the target account administrator. The locale code for the United States is `en`",
            "enum" : [ "None", "zh_cn", "zh_tw", "nl", "en", "fr", "de", "it", "ja", "ko", "pt", "pt_br", "ru", "es", "pl" ]
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the target account administrator. This property is required in the request body when cloning an account"
          }
        },
        "description" : "An object describing the administrator of the cloned account",
        "x-ds-definition-name" : "AssetGroupAccountCloneTargetAccountAdmin",
        "x-ms-summary" : "An object describing the administrator of the cloned account."
      },
      "Saml2IdentityProviderResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "type" : "array",
            "description" : "A list of settings",
            "items" : {
              "$ref" : "#/components/schemas/SettingResponse"
            }
          },
          "certificates" : {
            "type" : "array",
            "description" : "A list of certificates responses",
            "items" : {
              "$ref" : "#/components/schemas/CertificateResponse"
            }
          },
          "attribute_mappings" : {
            "type" : "array",
            "description" : "A list of attribute mappings",
            "items" : {
              "$ref" : "#/components/schemas/RequiredAttributeMappingResponse"
            },
            "x-ballerina-name" : "attributeMappings"
          },
          "issuer" : {
            "type" : "string",
            "description" : "The name of the certificate issuer"
          }
        },
        "description" : "Information about a SAML 2.0 identity provider",
        "x-ds-definition-name" : "Saml2IdentityProviderResponse",
        "x-ms-summary" : "Information about a SAML 2.0 identity provider."
      },
      "UsersDrilldownResponse" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "description" : "A list of users",
            "items" : {
              "$ref" : "#/components/schemas/UserDrilldownResponse"
            }
          }
        },
        "description" : "Information about a list of users",
        "x-ds-definition-name" : "UsersDrilldownResponse",
        "x-ms-summary" : "Information about a list of users."
      },
      "OrganizationsResponse" : {
        "type" : "object",
        "properties" : {
          "organizations" : {
            "type" : "array",
            "description" : "A list of organizations of which the  authenticated user is a member",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationResponse"
            }
          }
        },
        "description" : "Organization list",
        "x-ds-definition-name" : "OrganizationsResponse",
        "x-ms-summary" : "Organization list."
      },
      "OrganizationExportRequest" : {
        "type" : "object",
        "properties" : {
          "domains" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationExportDomain"
            }
          },
          "accounts" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationExportAccount"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of export requested. One of:\n\n- `organization_domain_users_export`: All users of the reserved domains.\n- `organization_external_memberships_export`: Users whose email address domain is *not* linked to the organization. \n- `organization_memberships_export`: Every user in every account in the organization. Users in multiple accounts will appear more than once.\n- `organization_account_settings_export`: This value only applies to requests to export account settings"
          }
        },
        "description" : "Enables you to specify the kind of export request",
        "x-ds-definition-name" : "OrganizationExportRequest",
        "x-ms-summary" : "Enables you to specify the kind of export request."
      },
      "PermissionsResponse" : {
        "type" : "object",
        "properties" : {
          "permissions" : {
            "type" : "array",
            "description" : "An array of permission profile responses",
            "items" : {
              "$ref" : "#/components/schemas/PermissionProfileResponse"
            }
          }
        },
        "description" : "A list of permission profiles for a given account",
        "x-ds-definition-name" : "PermissionsResponse",
        "x-ms-summary" : "A list of permission profiles for a given account."
      },
      "DeleteMembershipsResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "When **true,** the request to close the accounts succeeded"
          },
          "accounts" : {
            "type" : "array",
            "description" : "A list of accounts that were closed",
            "items" : {
              "$ref" : "#/components/schemas/DeleteMembershipResponse"
            }
          }
        },
        "description" : "The results of closing a user's account",
        "x-ds-definition-name" : "DeleteMembershipsResponse",
        "x-ms-summary" : "The results of closing a user's account."
      },
      "OrganizationExportTaskResponse" : {
        "type" : "object",
        "properties" : {
          "size_bytes" : {
            "type" : "integer",
            "description" : "The size of the response in bytes",
            "format" : "int64",
            "x-ballerina-name" : "sizeBytes"
          },
          "number_rows" : {
            "type" : "integer",
            "description" : "The number of rows returned in the result",
            "format" : "int64",
            "x-ballerina-name" : "numberRows"
          },
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OETRErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The ID of the site the response is for",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the task request",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL that returns the results as a CSV text stream"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportTaskResponse",
        "x-ms-summary" : ""
      },
      "UserUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the user whose email address has been updated",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "Error result of attempting to change a user's email address",
        "x-ds-definition-name" : "UserUpdateResponse",
        "x-ms-summary" : "Error result of attempting to change a user's email address."
      },
      "MultiProductUserManagement" : {
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "accounts" : {
            "type" : "array",
            "description" : "",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AddUserResponseAccountProperties"
            }
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`",
            "x-ballerina-name" : "federatedStatus"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "Methods to manage multi-product users in an account",
        "x-ds-definition-name" : "AddUserResponse",
        "x-ds-category" : "UserManagement",
        "x-ds-order" : "100",
        "x-ms-summary" : "Methods to manage multi-product users in an account."
      },
      "MembershipDataRedactionRequest" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "The ID of the account from which to delete the user's data",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "MembershipDataRedactionRequest",
        "x-ms-summary" : ""
      },
      "ProductPermissionProfileRequest" : {
        "required" : [ "permission_profile_id", "product_id" ],
        "type" : "object",
        "properties" : {
          "permission_profile_id" : {
            "type" : "string",
            "description" : "The ID of the permission profile for the given product. This property is required",
            "x-ballerina-name" : "permissionProfileId"
          },
          "product_id" : {
            "type" : "string",
            "description" : "The ID of the product. This property is required",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "productId"
          }
        },
        "description" : "Identifies a product and an associated permission profile",
        "x-ds-definition-name" : "ProductPermissionProfileRequest",
        "x-ms-summary" : "Identifies a product and an associated permission profile."
      },
      "NewUserResponse" : {
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID of the added user",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the added user",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "accounts" : {
            "type" : "array",
            "description" : "A list of accounts the user belongs to",
            "items" : {
              "$ref" : "#/components/schemas/NewUserResponseAccountProperties"
            }
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n",
            "x-ballerina-name" : "federatedStatus"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The primary email address of the user"
          }
        },
        "description" : "Information about a newly created user",
        "x-ds-definition-name" : "NewUserResponse",
        "x-ms-summary" : "Information about a newly created user."
      },
      "UserImport" : {
        "type" : "object",
        "description" : "Methods to import users\n",
        "x-ds-category" : "BulkOperations",
        "x-ms-summary" : "Methods to import users.\n"
      },
      "OrganizationSimpleIdObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "An ID object",
        "x-ds-definition-name" : "OrganizationSimpleIdObject",
        "x-ms-summary" : "An ID object."
      },
      "OrganizationAccountSettingsImportResultResponse" : {
        "type" : "object",
        "properties" : {
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OASIRRErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "processing_issues_by_account" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OASIRROrganizationAccountSettingsErrorDataResponse"
            },
            "x-ballerina-name" : "processingIssuesByAccount"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "number_processed_accounts" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64",
            "x-ballerina-name" : "numberProcessedAccounts"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "url" : {
            "type" : "string",
            "description" : ""
          },
          "number_unprocessed_accounts" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64",
            "x-ballerina-name" : "numberUnprocessedAccounts"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationAccountSettingsImportResultResponse",
        "x-ms-summary" : ""
      },
      "UserProductPermissionProfilesRequest" : {
        "required" : [ "email", "product_permission_profiles" ],
        "type" : "object",
        "properties" : {
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their associated permissions",
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileRequest"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address associated with the user whose permissions you want to update. This property is required"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "UserProductPermissionProfilesRequest",
        "x-ms-summary" : ""
      },
      "NewUserRequest" : {
        "required" : [ "accounts", "email" ],
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "access_code" : {
            "type" : "string",
            "description" : "The access code that the user needs to activate an account",
            "x-ballerina-name" : "accessCode"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "auto_activate_memberships" : {
            "type" : "boolean",
            "description" : "When **true,** the user's account is activated automatically",
            "x-ballerina-name" : "autoActivateMemberships"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "The account ID of the user's default account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "accounts" : {
            "type" : "array",
            "description" : "A list of accounts the user will belong to",
            "items" : {
              "$ref" : "#/components/schemas/NewUserRequestAccountProperties"
            }
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`",
            "x-ballerina-name" : "federatedStatus"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          },
          "selected_languages" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "selectedLanguages"
          }
        },
        "description" : "Information about a new user",
        "x-ds-definition-name" : "NewUserRequest",
        "x-ms-summary" : "Information about a new user."
      },
      "NewUserRequestAccountProperties" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "company_name" : {
            "type" : "string",
            "description" : "The user's company name",
            "x-ballerina-name" : "companyName"
          },
          "groups" : {
            "type" : "array",
            "description" : "The new user's requested groups",
            "items" : {
              "$ref" : "#/components/schemas/GroupRequest"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The account ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "permission_profile" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PermissionProfileRequest"
            } ],
            "x-ballerina-name" : "permissionProfile"
          },
          "job_title" : {
            "type" : "string",
            "description" : "The user's job title",
            "x-ballerina-name" : "jobTitle"
          }
        },
        "description" : "An individual new account user",
        "x-ds-definition-name" : "NewUserRequestAccountProperties",
        "x-ms-summary" : "An individual new account user."
      },
      "UserIdentityResponse" : {
        "type" : "object",
        "properties" : {
          "immutable_id" : {
            "type" : "string",
            "description" : "A unique ID to identify the removed user",
            "x-ballerina-name" : "immutableId"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The user ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "provider_id" : {
            "type" : "string",
            "description" : "The ID of the identity provider",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "providerId"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the result",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "Results of deleting a user identity",
        "x-ds-definition-name" : "UserIdentityResponse",
        "x-ms-summary" : "Results of deleting a user identity."
      },
      "PermissionProfileResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the permission profile. \n\nExample: `DocuSign Sender`"
          },
          "id" : {
            "type" : "integer",
            "description" : "The ID of the permission profile",
            "format" : "int64"
          }
        },
        "description" : "This object is an individual permission profile response",
        "x-ds-definition-name" : "PermissionProfileResponse",
        "x-ms-summary" : "This object is an individual permission profile response."
      },
      "OSAMRContact" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : ""
          },
          "title" : {
            "type" : "string",
            "description" : ""
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OSAMR_Contact",
        "x-ms-summary" : ""
      },
      "LinkResponse" : {
        "type" : "object",
        "properties" : {
          "rel" : {
            "type" : "string",
            "description" : "The kind of linked item"
          },
          "href" : {
            "type" : "string",
            "description" : "The URL of the linked item"
          }
        },
        "description" : "A link to a useful URL",
        "x-ds-definition-name" : "LinkResponse",
        "x-ms-summary" : "A link to a useful URL."
      },
      "OrganizationUsersResponse" : {
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/PagingResponseProperties"
          },
          "users" : {
            "type" : "array",
            "description" : "A list of users",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationUserResponse"
            }
          }
        },
        "description" : "A response containing information about users",
        "x-ds-definition-name" : "OrganizationUsersResponse",
        "x-ms-summary" : "A response containing information about users."
      },
      "PermissionProfileResponse21" : {
        "type" : "object",
        "properties" : {
          "permission_profile_id" : {
            "type" : "string",
            "description" : "The ID of the permission profile",
            "x-ballerina-name" : "permissionProfileId"
          },
          "permission_profile_name" : {
            "type" : "string",
            "description" : "The human-readable name of the permission profile",
            "x-ballerina-name" : "permissionProfileName"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "PermissionProfileResponse2_1",
        "x-ms-summary" : ""
      },
      "UserProductPermissionProfilesResponse" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "The ID of the account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their respective permissions",
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileResponse"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "UserProductPermissionProfilesResponse",
        "x-ms-summary" : ""
      },
      "Organization" : {
        "type" : "object",
        "description" : "Methods for working with organizations",
        "x-ds-category" : "Organization",
        "x-ms-summary" : "Methods for working with organizations."
      },
      "DSGroupAndUsersResponse" : {
        "type" : "object",
        "properties" : {
          "group_users" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DSGroupUsersResponse"
            } ],
            "x-ballerina-name" : "groupUsers"
          },
          "group" : {
            "$ref" : "#/components/schemas/DSGroupResponse"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupAndUsersResponse",
        "x-ms-summary" : ""
      },
      "DomainsResponse" : {
        "type" : "object",
        "properties" : {
          "reserved_domains" : {
            "type" : "array",
            "description" : "Information about reserved domains",
            "items" : {
              "$ref" : "#/components/schemas/DomainResponse"
            },
            "x-ballerina-name" : "reservedDomains"
          }
        },
        "description" : "A response about reserved domains",
        "x-ds-definition-name" : "DomainsResponse",
        "x-ms-summary" : "A response about reserved domains."
      },
      "BulkUsersAddBody" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "error_description" : {
            "type" : "string",
            "description" : "A description of the error",
            "x-ballerina-name" : "errorDescription"
          },
          "error" : {
            "type" : "string",
            "description" : "The code for the error"
          }
        },
        "description" : "Errors",
        "x-ds-definition-name" : "ErrorDetails",
        "x-ms-summary" : "Errors."
      },
      "DSGroupResponse" : {
        "type" : "object",
        "properties" : {
          "is_admin" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "isAdmin"
          },
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "last_modified_on" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "lastModifiedOn"
          },
          "user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "userCount"
          },
          "external_account_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64",
            "x-ballerina-name" : "externalAccountId"
          },
          "group_id" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "groupId"
          },
          "group_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "groupName"
          },
          "account_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "accountName"
          },
          "description" : {
            "type" : "string",
            "description" : ""
          },
          "ds_group_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "dsGroupId"
          },
          "source_product_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "sourceProductName"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupResponse",
        "x-ms-summary" : ""
      },
      "AccountSettingsImport" : {
        "type" : "object",
        "description" : "Methods and objects to update account settings",
        "x-ds-category" : "BulkOperations",
        "x-ms-summary" : "Methods and objects to update account settings."
      },
      "OrganizationExportAccount" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportAccount",
        "x-ms-summary" : ""
      },
      "DSGroupUserResponse" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "user_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "error_details" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorDetails"
            } ],
            "x-ballerina-name" : "errorDetails"
          },
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "middle_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "middleName"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "status" : {
            "type" : "string",
            "description" : "Status"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupUserResponse",
        "x-ms-summary" : ""
      },
      "OASIRRErrorDetails" : {
        "type" : "object",
        "properties" : {
          "error_description" : {
            "type" : "string",
            "description" : "A longer description of the error",
            "x-ballerina-name" : "errorDescription"
          },
          "error" : {
            "type" : "string",
            "description" : "The error number"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OASIRR_ErrorDetails",
        "x-ms-summary" : ""
      },
      "OETRErrorDetails" : {
        "type" : "object",
        "properties" : {
          "error_description" : {
            "type" : "string",
            "description" : "A longer description of the error",
            "x-ballerina-name" : "errorDescription"
          },
          "error" : {
            "type" : "string",
            "description" : "The error number"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OETR_ErrorDetails",
        "x-ms-summary" : ""
      },
      "DomainResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "type" : "array",
            "description" : "A list of settings for the reserved domain\n",
            "items" : {
              "$ref" : "#/components/schemas/SettingResponse"
            }
          },
          "identity_provider_id" : {
            "type" : "string",
            "description" : "The identity provider ID of the reserved domain",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "identityProviderId"
          },
          "links" : {
            "type" : "array",
            "description" : "A list of useful links",
            "items" : {
              "$ref" : "#/components/schemas/LinkResponse"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the reserved domain",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "host_name" : {
            "type" : "string",
            "description" : "The host name of the reserved domain",
            "x-ballerina-name" : "hostName"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the request. One of:\n\n- `unknown`\n- `pending`\n- `active`\n- `deactivated`\n- `rejected`"
          },
          "txt_token" : {
            "type" : "string",
            "description" : "A token  in form of text of the reserved domain",
            "x-ballerina-name" : "txtToken"
          }
        },
        "description" : "Information about a reserved domain",
        "x-ds-definition-name" : "DomainResponse",
        "x-ms-summary" : "Information about a reserved domain."
      },
      "OrganizationImportResponse" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : ""
          },
          "error_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "errorCount"
          },
          "user_level_warning_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseWarningRollup"
            },
            "x-ballerina-name" : "userLevelWarningRollups"
          },
          "imports_timed_out_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsTimedOutForAccounts"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "user_level_error_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseErrorRollup"
            },
            "x-ballerina-name" : "userLevelErrorRollups"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          },
          "updated_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "updatedUserCount"
          },
          "imports_timed_out_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsTimedOutForSites"
          },
          "created" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "imports_failed_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsFailedForAccounts"
          },
          "no_action_required_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "noActionRequiredUserCount"
          },
          "closed_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "closedUserCount"
          },
          "invalid_column_headers" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "invalidColumnHeaders"
          },
          "file_level_error_rollups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponseErrorRollup"
            },
            "x-ballerina-name" : "fileLevelErrorRollups"
          },
          "processed_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "processedUserCount"
          },
          "requestor" : {
            "$ref" : "#/components/schemas/OrganizationImportResponseRequestor"
          },
          "results_uri" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "resultsUri"
          },
          "imports_failed_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsFailedForSites"
          },
          "has_csv_results" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "hasCsvResults"
          },
          "user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "userCount"
          },
          "imports_not_found_or_not_available_for_accounts" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsNotFoundOrNotAvailableForAccounts"
          },
          "imports_not_found_or_not_available_for_sites" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "importsNotFoundOrNotAvailableForSites"
          },
          "warning_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "warningCount"
          },
          "added_user_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "addedUserCount"
          },
          "status" : {
            "type" : "string",
            "description" : "Status"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationImportResponse",
        "x-ms-summary" : ""
      },
      "OrganizationAccountRequest" : {
        "required" : [ "account_id" ],
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationAccountRequest",
        "x-ms-summary" : ""
      },
      "RemoveUserProductsResponse" : {
        "required" : [ "is_success", "user_product_results" ],
        "type" : "object",
        "properties" : {
          "user_email" : {
            "type" : "string",
            "description" : "The user's email address",
            "x-ballerina-name" : "userEmail"
          },
          "user_id" : {
            "type" : "string",
            "description" : "The user's ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "user_product_results" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The results of the request to revoke product access.\n\nEach key in the object is the ID of a product specified in the request. Each corresponding value indicates whether the user's access for that product was successfully revoked. If successful, the value is `deleted`. Otherwise, the value describes the error that occurred.\n\nFor example:\n```\n{\n        \"230546a7-xxxx-xxxx-xxxx-af205d5494ad\"\": \"deleted\",\n        \"984800b7-xxxx-xxxx-xxxx-kt374a5922lk\": \"Invalid product id\"\n}\n```",
            "x-ballerina-name" : "userProductResults"
          },
          "is_success" : {
            "type" : "boolean",
            "description" : "When **true,** indicates that the user's access to the specified products was successfully revoked",
            "x-ballerina-name" : "isSuccess"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "RemoveUserProductsResponse",
        "x-ms-summary" : ""
      },
      "ESignUserManagement" : {
        "type" : "object",
        "description" : "Methods to manage eSignature users in an account",
        "x-ds-category" : "UserManagement",
        "x-ms-summary" : "Methods to manage eSignature users in an account."
      },
      "AssetGroupAccountResponse" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "The ID of the account",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "externalAccountId" : {
            "type" : "integer",
            "description" : "The external account ID\n",
            "format" : "int64",
            "readOnly" : true
          },
          "assetGroupName" : {
            "type" : "string",
            "description" : "Reserved for DocuSign",
            "readOnly" : true
          },
          "accountName" : {
            "type" : "string",
            "description" : "The name of the account",
            "readOnly" : true
          },
          "compliant" : {
            "type" : "boolean",
            "description" : "When **true,** indicates that the account is compliant",
            "readOnly" : true
          },
          "siteId" : {
            "type" : "integer",
            "description" : "Reserved for DocuSign",
            "format" : "int32",
            "readOnly" : true
          },
          "siteName" : {
            "type" : "string",
            "description" : "Reserved for DocuSign",
            "readOnly" : true
          },
          "assetGroupId" : {
            "type" : "string",
            "description" : "The asset group ID",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AssetGroupAccountResponse",
        "x-ms-summary" : ""
      },
      "CloneErrorDetails" : {
        "type" : "object",
        "properties" : {
          "errorDescription" : {
            "type" : "string",
            "description" : "The error description",
            "readOnly" : true
          },
          "isSystemError" : {
            "type" : "boolean",
            "description" : "When **true,** indicates that the error was caused by the system. When **false,** indicates that the error was caused by the user",
            "readOnly" : true
          },
          "error" : {
            "type" : "string",
            "description" : "The error code",
            "readOnly" : true
          }
        },
        "description" : "",
        "x-ds-definition-name" : "CloneErrorDetails",
        "x-ms-summary" : ""
      },
      "SettingResponse" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the setting. One of:\n\n- `unknown`\n- `guid`\n- `text`\n- `integer`\n- `boolean`\n- `datetime`\n- `enumeration`"
          },
          "value" : {
            "type" : "object",
            "properties" : { },
            "description" : "The value of the setting"
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the setting"
          }
        },
        "description" : "A key/value list of settings",
        "x-ds-definition-name" : "SettingResponse",
        "x-ms-summary" : "A key/value list of settings."
      },
      "MembershipResponse" : {
        "type" : "object",
        "properties" : {
          "is_admin" : {
            "type" : "boolean",
            "description" : "When **true,**\nthe user has administration \nprivileges on the account",
            "x-ballerina-name" : "isAdmin"
          },
          "account_id" : {
            "type" : "string",
            "description" : "The ID of the account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "external_account_id" : {
            "type" : "string",
            "description" : "The external account ID",
            "x-ballerina-name" : "externalAccountId"
          },
          "created_on" : {
            "type" : "string",
            "description" : "The date the user's account was created",
            "format" : "date-time",
            "x-ballerina-name" : "createdOn"
          },
          "account_name" : {
            "type" : "string",
            "description" : "The name of the account",
            "x-ballerina-name" : "accountName"
          },
          "groups" : {
            "type" : "array",
            "description" : "A list of groups the user is a member of in this account,",
            "items" : {
              "$ref" : "#/components/schemas/MemberGroupResponse"
            }
          },
          "permission_profile" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PermissionProfileResponse"
            } ],
            "x-ballerina-name" : "permissionProfile"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          },
          "is_external_account" : {
            "type" : "boolean",
            "description" : "When **true,**\nthis is an external account",
            "x-ballerina-name" : "isExternalAccount"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the user's membership"
          }
        },
        "description" : "Information about group membership",
        "x-ds-definition-name" : "MembershipResponse",
        "x-ms-summary" : "Information about group membership."
      },
      "DSGroupUsersResponse" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "totalCount"
          },
          "page" : {
            "type" : "integer",
            "description" : "The page number",
            "format" : "int32"
          },
          "users" : {
            "type" : "array",
            "description" : "A list of users",
            "items" : {
              "$ref" : "#/components/schemas/DSGroupUserResponse"
            }
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The number of items per page",
            "format" : "int32",
            "x-ballerina-name" : "pageSize"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupUsersResponse",
        "x-ms-summary" : ""
      },
      "AssetGroupAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "assetGroupAccounts" : {
            "type" : "array",
            "description" : "The list of asset group accounts",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssetGroupAccountResponse"
            }
          }
        },
        "description" : "A list of asset group accounts",
        "x-ds-definition-name" : "AssetGroupAccountsResponse",
        "x-ms-summary" : "A list of asset group accounts."
      },
      "PagingResponseProperties" : {
        "type" : "object",
        "properties" : {
          "result_set_start_position" : {
            "type" : "integer",
            "description" : "The index position of the first result in this set",
            "format" : "int32",
            "x-ballerina-name" : "resultSetStartPosition"
          },
          "next" : {
            "type" : "string",
            "description" : "A URL to the next set of results. "
          },
          "previous" : {
            "type" : "string",
            "description" : "A URL to the previous set of results. "
          },
          "result_set_end_position" : {
            "type" : "integer",
            "description" : "The index position of the last result in this set",
            "format" : "int32",
            "x-ballerina-name" : "resultSetEndPosition"
          },
          "result_set_size" : {
            "type" : "integer",
            "description" : "The number of items in a result set (page)",
            "format" : "int32",
            "x-ballerina-name" : "resultSetSize"
          },
          "total_set_size" : {
            "type" : "integer",
            "description" : "The total number of results",
            "format" : "int32",
            "x-ballerina-name" : "totalSetSize"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "PagingResponseProperties",
        "x-ms-summary" : ""
      },
      "OrganizationImportResponseRequestor" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the requestor"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the requestor.\nIf `type` is `user`, this is the requestor's user ID"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the requestor. One of:\n\n- `user`\n- `client_app`"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the requestor"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationImportResponseRequestor",
        "x-ms-summary" : ""
      },
      "UserDrilldownResponse" : {
        "type" : "object",
        "properties" : {
          "user_status" : {
            "type" : "string",
            "description" : "The user's status. One of:\n\n- `active`\n- `created`\n- `closed`\n",
            "x-ballerina-name" : "userStatus"
          },
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "last_login" : {
            "type" : "string",
            "description" : "This property has been deprecated",
            "format" : "date-time",
            "x-ballerina-name" : "lastLogin"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "default_account_name" : {
            "type" : "string",
            "description" : "The name of the user's default account",
            "x-ballerina-name" : "defaultAccountName"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "The ID of the user's default account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n",
            "x-ballerina-name" : "federatedStatus"
          },
          "device_verification_enabled" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "deviceVerificationEnabled"
          },
          "memberships" : {
            "type" : "array",
            "description" : "A list of organizations that have groups that the user is a member of",
            "items" : {
              "$ref" : "#/components/schemas/MembershipResponse"
            }
          },
          "selected_languages" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "selectedLanguages"
          },
          "site_name" : {
            "type" : "string",
            "description" : "The site name of the account",
            "x-ballerina-name" : "siteName"
          },
          "is_organization_admin" : {
            "type" : "boolean",
            "description" : "When **true,** the user has organization administration privileges",
            "x-ballerina-name" : "isOrganizationAdmin"
          },
          "identities" : {
            "type" : "array",
            "description" : "A list of identities associated with the user",
            "items" : {
              "$ref" : "#/components/schemas/UserIdentityResponse"
            }
          },
          "created_on" : {
            "type" : "string",
            "description" : "The date the user's account was created",
            "format" : "date-time",
            "x-ballerina-name" : "createdOn"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID of the organization",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          }
        },
        "description" : "Information about a user",
        "x-ds-definition-name" : "UserDrilldownResponse",
        "x-ms-summary" : "Information about a user."
      },
      "ImportsAccountSettingsBody" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "OrganizationSalesforceAccountManagersResponse" : {
        "type" : "object",
        "properties" : {
          "account_type" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "accountType"
          },
          "account_manager" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OSAMRContact"
            } ],
            "x-ballerina-name" : "accountManager"
          },
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "x-ballerina-name" : "accountId"
          },
          "account_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "accountName"
          },
          "account_owner" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OSAMRContact"
            } ],
            "x-ballerina-name" : "accountOwner"
          },
          "parent_account" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OrganizationSalesforceAccountManagersResponse"
            } ],
            "x-ballerina-name" : "parentAccount"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationSalesforceAccountManagersResponse",
        "x-ms-summary" : ""
      },
      "AssetGroupAccountCloneTargetAccount" : {
        "type" : "object",
        "properties" : {
          "site" : {
            "type" : "string",
            "description" : "The data center site of the account. This property is read-only"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code of the target account. The country code for the United States is `en`. \n\n**Note:** When cloning an account, you must include this property or `region`. If both are provided, `region` will be used"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the target account. This property is required in the request body when cloning an account"
          },
          "admin" : {
            "$ref" : "#/components/schemas/AssetGroupAccountCloneTargetAccountAdmin"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the target account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "region" : {
            "type" : "string",
            "description" : "The region of the target account. \n\n**Note:** When cloning an account, you must include this property or `countryCode` in the request. If both are provided, `region` will be used"
          }
        },
        "description" : "An object describing the target cloned account",
        "x-ds-definition-name" : "AssetGroupAccountCloneTargetAccount",
        "x-ms-summary" : "An object describing the target cloned account."
      },
      "UserExport" : {
        "type" : "object",
        "description" : "Methods for exporting a user list",
        "x-ds-category" : "BulkOperations",
        "x-ms-summary" : "Methods for exporting a user list."
      },
      "OrganizationAccountsRequest" : {
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationAccountRequest"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationAccountsRequest",
        "x-ms-summary" : ""
      },
      "GroupRequest" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the group"
          },
          "id" : {
            "type" : "integer",
            "description" : "The ID of the group",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of group. One of:\n\n- `invalid`\n- `admin_group`\n- `everyone_group`\n- `custom_group`"
          }
        },
        "description" : "A group for a user to belong to",
        "x-ds-definition-name" : "GroupRequest",
        "x-ms-summary" : "A group for a user to belong to."
      },
      "OrgReportListResponseOrgReport" : {
        "type" : "object",
        "properties" : {
          "report_type_id" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "reportTypeId"
          },
          "created_on" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "createdOn"
          },
          "report_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "reportId"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "custom_start_date" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "customStartDate"
          },
          "custom_end_date" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "customEndDate"
          },
          "account_export_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "accountExportCount"
          },
          "report_date_range" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "reportDateRange"
          },
          "complete" : {
            "type" : "boolean",
            "description" : ""
          },
          "report_correlation_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "reportCorrelationId"
          },
          "requestor" : {
            "$ref" : "#/components/schemas/OrgReportListResponseRequestor"
          },
          "url" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportListResponse_OrgReport",
        "x-ms-summary" : ""
      },
      "UpdateUserEmailRequest" : {
        "required" : [ "email", "id", "site_id" ],
        "type" : "object",
        "properties" : {
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the users whose email address you want to change",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "email" : {
            "type" : "string",
            "description" : "The new email address"
          }
        },
        "description" : "And individual change of email",
        "x-ds-definition-name" : "UpdateUserEmailRequest",
        "x-ms-summary" : "And individual change of email."
      },
      "DataDeletion" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "membership_results" : {
            "type" : "array",
            "description" : "",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MembershipDataRedactionResponse"
            },
            "x-ballerina-name" : "membershipResults"
          },
          "status" : {
            "type" : "string",
            "description" : "Status",
            "readOnly" : true,
            "enum" : [ "unknown", "pending", "failure", "success", "already_redacted" ]
          }
        },
        "description" : "Methods to delete data for closed users",
        "x-ds-definition-name" : "IndividualUserDataRedactionResponse",
        "x-ds-category" : "UserManagement",
        "x-ds-order" : "100",
        "x-ms-summary" : "Methods to delete data for closed users."
      },
      "ProductPermissionProfileResponse" : {
        "type" : "object",
        "properties" : {
          "error_message" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "errorMessage"
          },
          "product_id" : {
            "type" : "string",
            "description" : "The ID of the product",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "productId"
          },
          "permission_profiles" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/PermissionProfileResponse21"
            },
            "x-ballerina-name" : "permissionProfiles"
          },
          "product_name" : {
            "type" : "string",
            "description" : "The human-readable name of the product",
            "x-ballerina-name" : "productName"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "ProductPermissionProfileResponse",
        "x-ms-summary" : ""
      },
      "MembershipDataRedactionResponse" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "The ID of the account",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the data deletion request. Valid values:\n- `success`\n- `pending`\n- `failure`\n- `already_redacted`\n",
            "readOnly" : true,
            "enum" : [ "unknown", "pending", "failure", "success", "already_redacted" ]
          }
        },
        "description" : "An object describing the status of the data deletion request for a specific account",
        "x-ds-definition-name" : "MembershipDataRedactionResponse",
        "x-ms-summary" : "An object describing the status of the data deletion request for a specific account."
      },
      "UserIdentityRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the identity",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "User identity,",
        "x-ds-definition-name" : "UserIdentityRequest",
        "x-ms-summary" : "User identity,"
      },
      "DeleteUserIdentityRequest" : {
        "required" : [ "identities" ],
        "type" : "object",
        "properties" : {
          "identities" : {
            "type" : "array",
            "description" : "A list of identities",
            "items" : {
              "$ref" : "#/components/schemas/UserIdentityRequest"
            }
          }
        },
        "description" : "Request to delete a user's identities,",
        "x-ds-definition-name" : "DeleteUserIdentityRequest",
        "x-ms-summary" : "Request to delete a user's identities,"
      },
      "OrganizationExportDomain" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportDomain",
        "x-ms-summary" : ""
      },
      "AddDSGroupAndUsersResponse" : {
        "type" : "object",
        "properties" : {
          "group_users" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AddDSGroupUsersResponse"
            } ],
            "x-ballerina-name" : "groupUsers"
          },
          "group" : {
            "$ref" : "#/components/schemas/DSGroupResponse"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AddDSGroupAndUsersResponse",
        "x-ms-summary" : ""
      },
      "BulkUsersAddBody1" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "IndividualMembershipDataRedactionRequest" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user whose data you want to delete",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "IndividualMembershipDataRedactionRequest",
        "x-ms-summary" : ""
      },
      "UpdateResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "The status of the request\n"
          }
        },
        "description" : "A response",
        "x-ds-definition-name" : "UpdateResponse",
        "x-ms-summary" : "A response."
      },
      "IndividualUserDataRedactionResponse" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "userId"
          },
          "membership_results" : {
            "type" : "array",
            "description" : "A list of objects describing the status of the deletion request for each account",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MembershipDataRedactionResponse"
            },
            "x-ballerina-name" : "membershipResults"
          },
          "status" : {
            "type" : "string",
            "description" : "The overall status of the data deletion request",
            "readOnly" : true,
            "enum" : [ "unknown", "pending", "failure", "success", "already_redacted" ]
          }
        },
        "description" : "",
        "x-ds-definition-name" : "IndividualUserDataRedactionResponse",
        "x-ms-summary" : ""
      },
      "DSGroupRequest" : {
        "required" : [ "ds_group_id" ],
        "type" : "object",
        "properties" : {
          "ds_group_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "dsGroupId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupRequest",
        "x-ms-summary" : ""
      },
      "OrganizationImportResponseWarningRollup" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The number of warnings of this type",
            "format" : "int32"
          },
          "warning_type" : {
            "type" : "string",
            "description" : "The type of warning",
            "x-ballerina-name" : "warningType"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationImportResponseWarningRollup",
        "x-ms-summary" : ""
      },
      "OrganizationImportsResponse" : {
        "type" : "object",
        "properties" : {
          "imports" : {
            "type" : "array",
            "description" : "A list of responses to user import requests",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationImportResponse"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationImportsResponse",
        "x-ms-summary" : ""
      },
      "OrgReportRequest" : {
        "type" : "object",
        "properties" : {
          "account_ids" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            },
            "x-ballerina-name" : "accountIds"
          },
          "custom_start_date" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "customStartDate"
          },
          "custom_end_date" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "customEndDate"
          },
          "report_date_range" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "reportDateRange"
          },
          "report_type" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "reportType"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportRequest",
        "x-ms-summary" : ""
      },
      "NewAccountUserRequest" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "access_code" : {
            "type" : "string",
            "description" : "The access code that the user needs to activate an account",
            "x-ballerina-name" : "accessCode"
          },
          "groups" : {
            "type" : "array",
            "description" : "The new user's requested groups",
            "items" : {
              "$ref" : "#/components/schemas/GroupRequest"
            }
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "auto_activate_memberships" : {
            "type" : "boolean",
            "description" : "When **true,** the user's account is activated automatically",
            "x-ballerina-name" : "autoActivateMemberships"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "The account ID of the user's default account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`\n",
            "x-ballerina-name" : "federatedStatus"
          },
          "permission_profile" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PermissionProfileRequest"
            } ],
            "x-ballerina-name" : "permissionProfile"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the user"
          },
          "selected_languages" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "selectedLanguages"
          }
        },
        "description" : "A new user request",
        "x-ds-definition-name" : "NewAccountUserRequest",
        "x-ms-summary" : "A new user request."
      },
      "MemberGroupsResponse" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "A list of the responses",
            "items" : {
              "$ref" : "#/components/schemas/MemberGroupResponse"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/PagingResponseProperties"
          }
        },
        "description" : "A response about member groups. It contains the groups and paging information",
        "x-ds-definition-name" : "MemberGroupsResponse",
        "x-ms-summary" : "A response about member groups. It contains the groups and paging information."
      },
      "IdentityProviderResponse" : {
        "type" : "object",
        "properties" : {
          "friendly_name" : {
            "type" : "string",
            "description" : "The human-readable name of the identity provider",
            "x-ballerina-name" : "friendlyName"
          },
          "saml_20" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Saml2IdentityProviderResponse"
            } ],
            "x-ballerina-name" : "saml20"
          },
          "auto_provision_users" : {
            "type" : "boolean",
            "description" : "When **true,** users who use this identity provider are automatically provisioned. ",
            "x-ballerina-name" : "autoProvisionUsers"
          },
          "links" : {
            "type" : "array",
            "description" : "A list of useful URLs",
            "items" : {
              "$ref" : "#/components/schemas/LinkResponse"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the identity provider",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the identity provider. One of:\n\n- `none`\n- `saml_20`\n- `saml_11`\n- `saml_10`\n- `ws_federation`\n- `open_id_connect`"
          }
        },
        "description" : "Information about a single identity provider",
        "x-ds-definition-name" : "IdentityProviderResponse",
        "x-ms-summary" : "Information about a single identity provider."
      },
      "RequiredAttributeMappingResponse" : {
        "type" : "object",
        "properties" : {
          "required_attribute_name" : {
            "type" : "string",
            "description" : "The name of the attribute",
            "x-ballerina-name" : "requiredAttributeName"
          },
          "required_attribute_friendly_name" : {
            "type" : "string",
            "description" : "The human-readable name of the attribute",
            "x-ballerina-name" : "requiredAttributeFriendlyName"
          },
          "required_attribute_id" : {
            "type" : "integer",
            "description" : "The unique ID of the attribute",
            "format" : "int32",
            "x-ballerina-name" : "requiredAttributeId"
          },
          "substitute_attribute_name" : {
            "type" : "string",
            "description" : "The name of the substitute attribute",
            "x-ballerina-name" : "substituteAttributeName"
          }
        },
        "description" : "A single attribute mapping response",
        "x-ds-definition-name" : "RequiredAttributeMappingResponse",
        "x-ms-summary" : "A single attribute mapping response."
      },
      "UpdateMembershipRequest" : {
        "required" : [ "account_id" ],
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "send_activation" : {
            "type" : "boolean",
            "description" : "When **true,** send an activation request after the update",
            "x-ballerina-name" : "sendActivation"
          },
          "company_name" : {
            "type" : "string",
            "description" : "The user's company name",
            "x-ballerina-name" : "companyName"
          },
          "access_code" : {
            "type" : "string",
            "description" : "The access code that the user needs to activate an account",
            "x-ballerina-name" : "accessCode"
          },
          "groups" : {
            "type" : "array",
            "description" : "The user's requested groups",
            "items" : {
              "$ref" : "#/components/schemas/GroupRequest"
            }
          },
          "permission_profile" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PermissionProfileRequest"
            } ],
            "x-ballerina-name" : "permissionProfile"
          },
          "job_title" : {
            "type" : "string",
            "description" : "The user's job title",
            "x-ballerina-name" : "jobTitle"
          }
        },
        "description" : "A request to update group membership",
        "x-ds-definition-name" : "UpdateMembershipRequest",
        "x-ms-summary" : "A request to update group membership."
      },
      "UsersUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "When **true,** the request to change user information succeeded"
          },
          "users" : {
            "type" : "array",
            "description" : "A list of users whose email addresses have been updated",
            "items" : {
              "$ref" : "#/components/schemas/UserUpdateResponse"
            }
          }
        },
        "description" : "The results of changing a user's information",
        "x-ds-definition-name" : "UsersUpdateResponse",
        "x-ms-summary" : "The results of changing a user's information."
      },
      "DeleteResponse" : {
        "type" : "object",
        "properties" : {
          "identities" : {
            "type" : "array",
            "description" : "A list of identities to delete",
            "items" : {
              "$ref" : "#/components/schemas/UserIdentityResponse"
            }
          },
          "success" : {
            "type" : "boolean",
            "description" : "When **true,** the request succeeded"
          }
        },
        "description" : "Results of deleting identities",
        "x-ds-definition-name" : "DeleteResponse",
        "x-ms-summary" : "Results of deleting identities."
      },
      "OrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "last_modified_on" : {
            "type" : "string",
            "description" : "The date the organization's account was last updated",
            "format" : "date-time",
            "x-ballerina-name" : "lastModifiedOn"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the organization"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "The default account ID of the organization",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "last_modified_by" : {
            "type" : "string",
            "description" : "The user who last updated the organization's account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "lastModifiedBy"
          },
          "default_permission_profile_id" : {
            "type" : "integer",
            "description" : "The default permission profile ID of the organization",
            "format" : "int64",
            "x-ballerina-name" : "defaultPermissionProfileId"
          },
          "created_by" : {
            "type" : "string",
            "description" : "The user who created the organization account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "createdBy"
          },
          "users" : {
            "type" : "array",
            "description" : "A list of the organization accounts users",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationSimpleIdObject"
            }
          },
          "reserved_domains" : {
            "type" : "array",
            "description" : "A list of reserved domains for the organization",
            "items" : {
              "$ref" : "#/components/schemas/DomainResponse"
            },
            "x-ballerina-name" : "reservedDomains"
          },
          "created_on" : {
            "type" : "string",
            "description" : "The date the organization's account was created",
            "format" : "date-time",
            "x-ballerina-name" : "createdOn"
          },
          "identity_providers" : {
            "type" : "array",
            "description" : "A list of identity providers for the organization",
            "items" : {
              "$ref" : "#/components/schemas/IdentityProvidersResponse"
            },
            "x-ballerina-name" : "identityProviders"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the organization"
          },
          "links" : {
            "type" : "array",
            "description" : "A list of links for the organization",
            "items" : {
              "$ref" : "#/components/schemas/LinkResponse"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the organization",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "accounts" : {
            "type" : "array",
            "description" : "A list of organization accounts",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationAccountResponse"
            }
          }
        },
        "description" : "Information about an individual organization",
        "x-ds-definition-name" : "OrganizationResponse",
        "x-ms-summary" : "Information about an individual organization."
      },
      "OrganizationAccountSettingsImportRequestorResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : ""
          },
          "id" : {
            "type" : "string",
            "description" : ""
          },
          "type" : {
            "type" : "string",
            "description" : ""
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationAccountSettingsImportRequestorResponse",
        "x-ms-summary" : ""
      },
      "AccountCloning" : {
        "type" : "object",
        "properties" : {
          "assetGroupAccounts" : {
            "type" : "array",
            "description" : "The list of asset group accounts",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssetGroupAccountResponse"
            }
          }
        },
        "description" : "Methods to clone accounts",
        "x-ds-definition-name" : "AssetGroupAccountsResponse",
        "x-ds-category" : "AccountProvisioning",
        "x-ds-order" : "100",
        "x-ms-summary" : "Methods to clone accounts."
      },
      "MemberGroupResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the group"
          },
          "id" : {
            "type" : "integer",
            "description" : "The unique ID of the group",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of group. One of:\n\n- `invalid`\n- `admin_group`\n- `everyone_group`\n- `custom_group`"
          }
        },
        "description" : "And individual group responses,",
        "x-ds-definition-name" : "MemberGroupResponse",
        "x-ms-summary" : "And individual group responses,."
      },
      "UpdateUserRequest" : {
        "required" : [ "id", "site_id" ],
        "type" : "object",
        "properties" : {
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "The account ID of the user's default account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`",
            "x-ballerina-name" : "federatedStatus"
          },
          "device_verification_enabled" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "deviceVerificationEnabled"
          },
          "memberships" : {
            "type" : "array",
            "description" : "A list of group membership requests",
            "items" : {
              "$ref" : "#/components/schemas/UpdateMembershipRequest"
            }
          },
          "selected_languages" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "selectedLanguages"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "force_password_change" : {
            "type" : "boolean",
            "description" : "When **true,** the user will be required to change the account password",
            "x-ballerina-name" : "forcePasswordChange"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "Request to change a user's information",
        "x-ds-definition-name" : "UpdateUserRequest",
        "x-ms-summary" : "Request to change a user's information."
      },
      "ProductPermissionProfilesResponse" : {
        "type" : "object",
        "properties" : {
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their respective permissions",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileResponse"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "ProductPermissionProfilesResponse",
        "x-ms-summary" : ""
      },
      "AssetGroupAccountClone" : {
        "required" : [ "sourceAccount", "targetAccount" ],
        "type" : "object",
        "properties" : {
          "createdByName" : {
            "type" : "string",
            "description" : "The name of the user who initiated the clone request",
            "readOnly" : true
          },
          "sourceAccount" : {
            "$ref" : "#/components/schemas/AssetGroupAccountCloneSourceAccount"
          },
          "orderId" : {
            "type" : "string",
            "description" : "Reserved for DocuSign",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "cloneProcessingFailureDetails" : {
            "$ref" : "#/components/schemas/CloneErrorDetails"
          },
          "message" : {
            "type" : "string",
            "description" : "A message providing information about the clone request. If the request resulted in an error, this message includes specific information about the error",
            "readOnly" : true
          },
          "assetGroupId" : {
            "type" : "string",
            "description" : "The ID of the asset group to which the account belongs. Use this value to retrieve information about the clone request with the [getAssetGroupAccountClone](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccountclone/) endpoint",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "assetGroupWorkType" : {
            "type" : "string",
            "description" : "The type of asset group work",
            "readOnly" : true,
            "enum" : [ "Undefined", "GroupAssetFulfillment", "AccountAssetFulfillment", "AccountAssetClone", "AccountAssetCreate" ]
          },
          "createdByEmail" : {
            "type" : "string",
            "description" : "The email address of the user who initiated the clone request",
            "readOnly" : true
          },
          "cloneRequestId" : {
            "type" : "string",
            "description" : "Reserved for DocuSign",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The date that the clone request was initiated",
            "format" : "date-time",
            "readOnly" : true
          },
          "targetAccount" : {
            "$ref" : "#/components/schemas/AssetGroupAccountCloneTargetAccount"
          },
          "assetGroupWorkId" : {
            "type" : "string",
            "description" : "The ID of the job that is created by the request. Use this value to retrieve information about the clone request with the [getAssetGroupAccountClone](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccountclone/) endpoint",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the clone request. Valid values:\n* `Pending`\n* `Processing`\n* `PendingError`\n* `ProcessingError`\n* `Completed`\n* `Canceled`\n* `PermanentFailure`",
            "readOnly" : true,
            "enum" : [ "Undefined", "Pending", "Processing", "PendingError", "ProcessingError", "Completed", "Canceled", "PermanentFailure" ]
          },
          "attempts" : {
            "type" : "integer",
            "description" : "The number of retries",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "The account that is cloned",
        "x-ds-definition-name" : "AssetGroupAccountClone",
        "x-ms-summary" : "The account that is cloned."
      },
      "OrganizationExportsResponse" : {
        "type" : "object",
        "properties" : {
          "exports" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationExportResponse"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportsResponse",
        "x-ms-summary" : ""
      },
      "OrgReportConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "enabled_report_types" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "x-ballerina-name" : "enabledReportTypes"
          },
          "is_account_limit_disabled" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "isAccountLimitDisabled"
          },
          "custom_dates_enabled" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "customDatesEnabled"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportConfigurationResponse",
        "x-ms-summary" : ""
      },
      "DSGroupListResponse" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          },
          "ds_groups" : {
            "type" : "array",
            "description" : "",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DSGroupResponse"
            },
            "x-ballerina-name" : "dsGroups"
          },
          "total_count" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "totalCount"
          },
          "page" : {
            "type" : "integer",
            "description" : "The page number",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The number of items per page",
            "format" : "int32",
            "x-ballerina-name" : "pageSize"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupListResponse",
        "x-ms-summary" : ""
      },
      "OrganizationExportResponse" : {
        "type" : "object",
        "properties" : {
          "expires" : {
            "type" : "string",
            "description" : "The time and date when the request expires",
            "format" : "date-time"
          },
          "size_bytes" : {
            "type" : "integer",
            "description" : "The size of the request in bytes",
            "format" : "int64",
            "x-ballerina-name" : "sizeBytes"
          },
          "metadata_url" : {
            "type" : "string",
            "description" : "A pre-configured GET request to get the status of the export. Generally this is the same URI used to access this endpoint",
            "x-ballerina-name" : "metadataUrl"
          },
          "created" : {
            "type" : "string",
            "description" : "The time and date the request was created. This is a date in ISO 8601 format.\n\nExample:  `2019-03-26T19:02:09.8957715Z`",
            "format" : "date-time"
          },
          "completed" : {
            "type" : "string",
            "description" : "The time and date when the request completed. Null if the request is still in progress\n",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of export requested. One of:\n\n- `organization_domain_users_export`: All users of the reserved domains.\n- `organization_external_memberships_export`: Users whose email address domain is *not* linked to the organization. \n- `organization_memberships_export`: Every user in every account in the organization. Users in multiple accounts will appear more than once.\n- `organization_account_settings_export`: This value only applies to requests to export account settings"
          },
          "requestor" : {
            "$ref" : "#/components/schemas/OrganizationExportRequestorResponse"
          },
          "selected_accounts" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrgExportSelectedAccount"
            },
            "x-ballerina-name" : "selectedAccounts"
          },
          "percent_completed" : {
            "type" : "integer",
            "description" : "An integer between 0 to 100 (inclusive) that reports the progress of the request",
            "format" : "int32",
            "x-ballerina-name" : "percentCompleted"
          },
          "selected_domains" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrgExportSelectedDomain"
            },
            "x-ballerina-name" : "selectedDomains"
          },
          "number_rows" : {
            "type" : "integer",
            "description" : "The number of rows returned in this request\n",
            "format" : "int64",
            "x-ballerina-name" : "numberRows"
          },
          "success" : {
            "type" : "boolean",
            "description" : "When **true,** the request succeeded. \n"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of this request",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "last_modified" : {
            "type" : "string",
            "description" : "The time and date when the request was modified. This is typically the same as `created`",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          },
          "results" : {
            "type" : "array",
            "description" : "An array of results. There is one set of results for each server an account is in",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationExportTaskResponse"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the request. One of:\n\n- `failed`\n- `in_process`\n- `queued`\n- `completed`\n"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportResponse",
        "x-ms-summary" : ""
      },
      "BulkUsersUpdateBody" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "DeleteMembershipRequest" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of a user's account you want to close",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DeleteMembershipRequest",
        "x-ms-summary" : ""
      },
      "IdentityProviders" : {
        "type" : "object",
        "description" : "Methods to get a list of identity providers",
        "x-ds-category" : "IdentityProviders",
        "x-ms-summary" : "Methods to get a list of identity providers."
      },
      "IdentityProvidersResponse" : {
        "type" : "object",
        "properties" : {
          "identity_providers" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/IdentityProviderResponse"
            },
            "x-ballerina-name" : "identityProviders"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "IdentityProvidersResponse",
        "x-ms-summary" : ""
      },
      "OASIRROrganizationAccountSettingsErrorDataResponse" : {
        "type" : "object",
        "properties" : {
          "error_key" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "errorKey"
          },
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "x-ballerina-name" : "accountId"
          },
          "account_name" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "accountName"
          },
          "error" : {
            "type" : "string",
            "description" : "The error number"
          },
          "setting_key" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "settingKey"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OASIRR_OrganizationAccountSettingsErrorDataResponse",
        "x-ms-summary" : ""
      },
      "AddUserResponseAccountProperties" : {
        "type" : "object",
        "properties" : {
          "ds_groups" : {
            "type" : "array",
            "description" : "",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DSGroupResponse"
            },
            "x-ballerina-name" : "dsGroups"
          },
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their respective permissions",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileResponse"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          },
          "company_name" : {
            "type" : "string",
            "description" : "The user's company name",
            "x-ballerina-name" : "companyName"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "job_title" : {
            "type" : "string",
            "description" : "The user's job title",
            "x-ballerina-name" : "jobTitle"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AddUserResponseAccountProperties",
        "x-ms-summary" : ""
      },
      "ForceActivateMembershipRequest" : {
        "required" : [ "site_id" ],
        "type" : "object",
        "properties" : {
          "site_id" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "ForceActivateMembershipRequest",
        "x-ms-summary" : ""
      },
      "DSGroupUsersRemoveRequest" : {
        "type" : "object",
        "properties" : {
          "user_ids" : {
            "type" : "array",
            "description" : "An array of IDs corresponding to users to remove from the group",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            },
            "x-ballerina-name" : "userIds"
          },
          "user_emails" : {
            "type" : "array",
            "description" : "An array of emails associated with users to remove from the group. **Note:** If `user_ids` is also specified, this parameter will be ignored",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "userEmails"
          }
        },
        "description" : "Information about users to remove from the group",
        "x-ds-definition-name" : "DSGroupUsersRemoveRequest",
        "x-ms-summary" : "Information about users to remove from the group."
      },
      "BulkUsersUpdateBody1" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "AssetGroupAccountClones" : {
        "type" : "object",
        "properties" : {
          "assetGroupWorks" : {
            "type" : "array",
            "description" : "The list of asset group accounts",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AssetGroupAccountClone"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AssetGroupAccountClones",
        "x-ms-summary" : ""
      },
      "OrganizationAccountResponse" : {
        "type" : "object",
        "properties" : {
          "external_account_id" : {
            "type" : "integer",
            "description" : "The external account ID",
            "format" : "int64",
            "x-ballerina-name" : "externalAccountId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the account"
          },
          "site_id" : {
            "type" : "integer",
            "description" : "The site ID",
            "format" : "int32",
            "x-ballerina-name" : "siteId"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the  account",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "Information about an account",
        "x-ds-definition-name" : "OrganizationAccountResponse",
        "x-ms-summary" : "Information about an account."
      },
      "OrgReportCreateResponse" : {
        "type" : "object",
        "properties" : {
          "report_correlation_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "reportCorrelationId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportCreateResponse",
        "x-ms-summary" : ""
      },
      "OrgExportSelectedAccount" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "description" : "Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "accountId"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgExportSelectedAccount",
        "x-ms-summary" : ""
      },
      "ReservedDomains" : {
        "type" : "object",
        "description" : "Methods to get a list of reserved domains",
        "x-ds-category" : "ReservedDomains",
        "x-ms-summary" : "Methods to get a list of reserved domains."
      },
      "NewMultiProductUserAddRequest" : {
        "required" : [ "email", "product_permission_profiles" ],
        "type" : "object",
        "properties" : {
          "ds_groups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DSGroupRequest"
            },
            "x-ballerina-name" : "dsGroups"
          },
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "product_permission_profiles" : {
            "type" : "array",
            "description" : "A list of one or more products and their respective permissions",
            "items" : {
              "$ref" : "#/components/schemas/ProductPermissionProfileRequest"
            },
            "x-ballerina-name" : "productPermissionProfiles"
          },
          "access_code" : {
            "type" : "string",
            "description" : "The access code that the user needs to activate an account",
            "x-ballerina-name" : "accessCode"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "auto_activate_memberships" : {
            "type" : "boolean",
            "description" : "When **true,** the user's account is activated automatically",
            "x-ballerina-name" : "autoActivateMemberships"
          },
          "default_account_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "defaultAccountId"
          },
          "language_culture" : {
            "type" : "string",
            "description" : "The language and culture of the user.\n\n  * Chinese Simplified: `zh_CN`\n  * Chinese Traditional: `zh_TW`\n  * Dutch: `nl`\n  * English: `en`\n  * French: `fr`\n  * German: `de`\n  * Italian: `it`\n  * Japanese: `ja`\n  * Korean: `ko`\n  * Portuguese: `pt`\n  * Portuguese Brazil: `pt_BR`\n  * Russian: `ru`\n  * Spanish: `es`\n",
            "x-ballerina-name" : "languageCulture"
          },
          "federated_status" : {
            "type" : "string",
            "description" : "The user's federated status. One of:\n\n- `RemoveStatus`\n- `FedAuthRequired`\n- `FedAuthBypass`\n- `Evicted`",
            "x-ballerina-name" : "federatedStatus"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "NewMultiProductUserAddRequest",
        "x-ms-summary" : ""
      },
      "CertificateResponse" : {
        "type" : "object",
        "properties" : {
          "is_valid" : {
            "type" : "boolean",
            "description" : "When **true,** the certificate is valid",
            "readOnly" : true,
            "x-ballerina-name" : "isValid"
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "The thumbprint of the certificate"
          },
          "links" : {
            "type" : "array",
            "description" : "A list of useful links",
            "items" : {
              "$ref" : "#/components/schemas/LinkResponse"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the certificate",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "expiration_date" : {
            "type" : "string",
            "description" : "The date when the certificate expires",
            "format" : "date-time",
            "x-ballerina-name" : "expirationDate"
          },
          "issuer" : {
            "type" : "string",
            "description" : "The certificate issuer"
          }
        },
        "description" : "Information about a single certificate",
        "x-ds-definition-name" : "CertificateResponse",
        "x-ms-summary" : "Information about a single certificate."
      },
      "AssetGroupAccountCloneSourceAccount" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "site" : {
            "type" : "string",
            "description" : "The site the source account is on",
            "readOnly" : true
          },
          "externalAccountId" : {
            "type" : "integer",
            "description" : "The external account ID of the source account\n",
            "format" : "int64",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the source account",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the account to clone. This property is required in POST requests\n",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "AssetGroupAccountCloneSourceAccount",
        "x-ms-summary" : ""
      },
      "OrganizationExportRequestorResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the requestor"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the requestor.\nIf `type` is `user`, this is the requestor's user ID"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the requestor. One of:\n\n- `user`\n- `client_app`"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the requestor"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationExportRequestorResponse",
        "x-ms-summary" : ""
      },
      "OrganizationImportResponseErrorRollup" : {
        "type" : "object",
        "properties" : {
          "error_type" : {
            "type" : "string",
            "description" : "The type of error. One of:\n\n\n- `no_action_taken_user_exists`\n- `user_added`\n- `user_updated`\n- `invalid_column_header`\n- `invalid_row_data`\n- `insufficient_row_data_found`\n- `extra_row_data_found`\n- `blank_username`\n- `invalid_characters_in_username`\n- `invalid_useremail_address`\n- `email_domain_is_reserved`\n- `new_name_with_existing_useremail_not_allowed`\n- `invalid_characters_in_jobtitle`\n- `invalid_membership_id`\n- `membership_not_in_account`\n- `maximum_users_exceeded`\n- `invalid_permissionset`\n- `user_permissionset_problems`\n- `invalid_group`\n- `user_group_problems`\n- `group_and_permissionset_problems`\n- `column_headers_missing`\n- `invalid_csv_data_or_syntax`\n- `invalid_characters_in_companyname`\n- `invalid_language_code`\n- `username_column_header_missing`\n- `useremail_column_header_missing`\n- `permissionset_column_header_missing`\n- `membership_id_column_header_usage_not_permitted`\n- `administrator_group_assignment_not_permitted`\n- `user_awaiting_activation`\n- `account_admin_access_denied`\n- `invalid_characters_in_address`\n- `permissionset_required`\n- `apiusername_column_header_missing`\n- `invalid_apiusername`\n- `useremail_username_combination_exists`\n- `permissionset_change_not_allowed`\n- `username_language_changes_ignored_warning`\n- `invalid_country_warning`\n- `invalid_account_id`\n- `invalid_autoactivate`\n- `invalid_loginpolicy`\n- `autoactivate_not_allowed`\n- `membership_closed`\n- `membership_closed_or_disabled_warning`\n- `cannot_close_last_active_admin`\n- `no_action_taken`\n- `cannot_close_own_membership`\n- `unspecified_error`\n\n",
            "x-ballerina-name" : "errorType"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of errors of this type",
            "format" : "int32"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationImportResponseErrorRollup",
        "x-ms-summary" : ""
      },
      "OrganizationAccountSettingsImportResponse" : {
        "type" : "object",
        "properties" : {
          "skipped_settings_by_account" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "",
            "x-ballerina-name" : "skippedSettingsByAccount"
          },
          "expires" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "completed" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "description" : ""
          },
          "number_unprocessed_accounts" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64",
            "x-ballerina-name" : "numberUnprocessedAccounts"
          },
          "requestor" : {
            "$ref" : "#/components/schemas/OrganizationAccountSettingsImportRequestorResponse"
          },
          "percent_completed" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32",
            "x-ballerina-name" : "percentCompleted"
          },
          "success" : {
            "type" : "boolean",
            "description" : ""
          },
          "organization_id" : {
            "type" : "string",
            "description" : "",
            "x-ballerina-name" : "organizationId"
          },
          "number_processed_accounts" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64",
            "x-ballerina-name" : "numberProcessedAccounts"
          },
          "id" : {
            "type" : "string",
            "description" : ""
          },
          "last_modified" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time",
            "x-ballerina-name" : "lastModified"
          },
          "results" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationAccountSettingsImportResultResponse"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "Status"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrganizationAccountSettingsImportResponse",
        "x-ms-summary" : ""
      },
      "OrganizationUserResponse" : {
        "type" : "object",
        "properties" : {
          "user_status" : {
            "type" : "string",
            "description" : "The user's status. One of:\n\n- `active`\n- `created`\n- `closed`\n",
            "x-ballerina-name" : "userStatus"
          },
          "ds_groups" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DSGroupResponse"
            },
            "x-ballerina-name" : "dsGroups"
          },
          "created_on" : {
            "type" : "string",
            "description" : "The date the user's account was created",
            "format" : "date-time",
            "x-ballerina-name" : "createdOn"
          },
          "membership_created_on" : {
            "type" : "string",
            "description" : "The date on which the user became a member of the organization",
            "format" : "date-time",
            "x-ballerina-name" : "membershipCreatedOn"
          },
          "user_name" : {
            "type" : "string",
            "description" : "The full name of the user",
            "x-ballerina-name" : "userName"
          },
          "membership_id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000",
            "x-ballerina-name" : "membershipId"
          },
          "last_name" : {
            "type" : "string",
            "description" : "The user's last name",
            "x-ballerina-name" : "lastName"
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The user's first name",
            "x-ballerina-name" : "firstName"
          },
          "membership_status" : {
            "type" : "string",
            "description" : "The user's membership status. One of:\n\n- `activation_required`\n- `activation_sent`\n- `active`\n- `closed`\n- `disabled`\n",
            "x-ballerina-name" : "membershipStatus"
          },
          "email" : {
            "type" : "string",
            "description" : "The email address"
          }
        },
        "description" : "Information about a user",
        "x-ds-definition-name" : "OrganizationUserResponse",
        "x-ms-summary" : "Information about a user."
      },
      "DSGroupUsersAddRequest" : {
        "required" : [ "user_ids" ],
        "type" : "object",
        "properties" : {
          "user_ids" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "string",
              "format" : "uuid",
              "example" : "00000000-0000-0000-0000-000000000000"
            },
            "x-ballerina-name" : "userIds"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "DSGroupUsersAddRequest",
        "x-ms-summary" : ""
      },
      "OrgReportListResponse" : {
        "type" : "object",
        "properties" : {
          "reports" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/OrgReportListResponseOrgReport"
            }
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportListResponse",
        "x-ms-summary" : ""
      },
      "OrgReportListResponseRequestor" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : ""
          },
          "id" : {
            "type" : "string",
            "description" : "",
            "format" : "uuid",
            "example" : "00000000-0000-0000-0000-000000000000"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgReportListResponse_Requestor",
        "x-ms-summary" : ""
      },
      "BulkUsersCloseBody" : {
        "required" : [ "file.csv" ],
        "type" : "object",
        "properties" : {
          "file.csv" : {
            "type" : "string",
            "description" : "CSV file",
            "format" : "binary",
            "x-ballerina-name" : "fileCsv"
          }
        }
      },
      "PermissionProfileRequest" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the permission profile"
          },
          "id" : {
            "type" : "integer",
            "description" : "The ID of the permission profile",
            "format" : "int64"
          }
        },
        "description" : "A permission profile",
        "x-ds-definition-name" : "PermissionProfileRequest",
        "x-ms-summary" : "A permission profile."
      },
      "RemoveDSGroupUsersResponse" : {
        "type" : "object",
        "properties" : {
          "failed_users" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/DSGroupUserResponse"
            },
            "x-ballerina-name" : "failedUsers"
          },
          "is_success" : {
            "type" : "boolean",
            "description" : "",
            "x-ballerina-name" : "isSuccess"
          }
        },
        "description" : "",
        "x-ds-definition-name" : "RemoveDSGroupUsersResponse",
        "x-ms-summary" : ""
      },
      "OrgExportSelectedDomain" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "",
        "x-ds-definition-name" : "OrgExportSelectedDomain",
        "x-ms-summary" : ""
      }
    },
    "securitySchemes" : {
      "accessCode" : {
        "type" : "oauth2",
        "description" : "OAuth2 Access code Grant",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://account.docusign.com/oauth/auth",
            "tokenUrl" : "https://account.docusign.com/oauth/auth",
            "scopes" : {
              "organization_read" : "",
              "user_data_redact" : "",
              "permission_read" : "",
              "group_read" : "",
              "user_read" : "",
              "account_read" : "",
              "account_write" : "",
              "user_write" : "",
              "identity_provider_read" : "",
              "domain_read" : ""
            }
          }
        }
      }
    }
  },
  "x-ds-categories" : [ {
    "name" : "IdentityProviders",
    "summary" : "Methods to get a list of identity providers.",
    "description" : "Methods to get a list of identity providers."
  }, {
    "name" : "ReservedDomains",
    "summary" : "Methods to get a list of reserved domains.",
    "description" : "Methods to get a list of reserved domains."
  }, {
    "name" : "UserManagement",
    "summary" : "Methods to manage users in an account.",
    "description" : "Methods to manage users in an account."
  }, {
    "name" : "BulkOperations",
    "summary" : "Methods to import and export users and accounts.",
    "description" : "Methods to import and export users and accounts."
  }, {
    "name" : "Organization",
    "summary" : "Methods for working with organizations.",
    "description" : "Methods for working with organizations."
  }, {
    "name" : "AccountProvisioning",
    "summary" : "Methods to provision accounts in your organization.",
    "description" : "Methods to provision accounts in your organization."
  } ],
  "x-original-swagger-version" : "2.0"
}